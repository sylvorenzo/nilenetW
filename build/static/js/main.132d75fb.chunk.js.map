{"version":3,"sources":["screens/validateInfo.js","assets/nilenet.png","screens/fire.js","screens/useForm.js","screens/Login.js","screens/FormSignup.js","screens/regPage.js","screens/FeedScreen.js","screens/Navigation.js","screens/About.js","assets/pic3.jpg","assets/city.jpg","screens/profile.js","screens/createpost.js","screens/helpPage.js","screens/Home.js","screens/mybusiness.js","screens/resources.js","screens/projects.js","screens/editProfile.js","screens/Contact.js","screens/finances.js","screens/opportunities.js","screens/investorProfileEdit.js","screens/chat.js","App.js","reportWebVitals.js","index.js"],"names":["validateInfo","values","errors","username","trim","email","test","companyName","password","length","password2","fire","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","databaseURL","useForm","callback","validate","useState","type","surname","companyDescription","numberofEmployees","sectorOfBusiness","user","projectImage","projectTitle","projectStatus","projectDescription","setValues","setErrors","isSubmitting","setIsSubmitting","useEffect","Object","keys","handleChangeP","e","target","name","value","handleChange","handleSubmit","preventDefault","current","auth","currentUser","db","database","ref","uid","set","BRnumber","businessLocation","estimatedAnnualRevenue","then","alert","handleSubmitI","title","HandleLogin","signInWithEmailAndPassword","catch","handleLogout","signOut","console","log","handleSignup","createUserWithEmailAndPassword","sendEmailVerification","handlePasswordReset","sendPasswordResetEmail","InvestorLogin","hasAccount","sethasAccount","alt","src","logo","className","autoFocus","required","onChange","placeholder","onClick","FormSignup","submitForm","onSubmit","class","noValidate","to","InvestReg","FeedScreen","props","drawerToggleClickHandler","userid","setState","drawerOpen","state","drawerClasses","key","drawerToggleClickHandler1","postkey","drawerOpen1","drawerClasses1","drawerToggleClickHandler2","variable","drawerOpen2","drawerClasses2","backdropClickHandler","drawerCloser","drawerCloser1","items","ProjectPosts","images","id","typeDetermine","tag","datapoints","search","query","users","Messages","message","ChatID","thisU","status","bind","handleMessage","handleFollow","profileImage","this","remove","parsedUid","CurrentUid","sessionId","alternateSessionId","messageId","Date","now","today","time","getHours","getMinutes","chatUid","event","on","snapshot","val","extensionArray","map","childshot","messages","push","exists","userInfo","userKeys","x","item","newItems","Item","chartValues","array","chartItems","NewItems","point1","point2","point3","tag1","tag2","tag3","postValues","postKeys","show","icon","faArrowCircleLeft","size","style","overflow","display","borderBottom","width","color","text","float","paddingRight","paddingLeft","autoComplete","faArrowCircleRight","height","faCogs","post","index","indexOf","chartType","loading","data","options","Component","Navigation","setItems","Posts","setPosts","Items","Nav","NavItem","faUserCircle","faHome","faWindowRestore","faTh","faPlusCircle","faChartLine","faWrench","faSignOutAlt","href","padding","faChartPie","About","ProfileScreen","setType","typeReader","setTypeReader","entrepreneurPosts","setEntrepreneurPosts","setEntrepreneurItems","types","child","newPosts","forEach","childsnapshot","orderByValue","faTrash","CreatePostScreen","storage","image","setImage","urlf","setUrl","setProjectKey","files","put","error","getDownloadURL","url","newPostKey","projectKey","Asker","for","HomeScreen","profile","MyBusinessScreen","numberofMilestones","managementExperience","TotalcapitalAmount","financialBackground","relationships","numberOfCompetitors","open","setDrawerOpen","setDrawerClasses","datas","setDatas","results","setResults","setTag","setDatapoints","charts","setCharts","setSectorOfBusiness","chartpoints","newpoints","labels","pointers","focus","model","ml5","neuralNetwork","task","debug","handleResults","result","label","confidence","inputs","output","addData","normalizeData","train","epochs","batchSize","input2","classify","toggle","ResourceScreen","ProjectScreen","CurrentMessages","comment","margin","EditProfileScreen","Contact","setName","setEmail","msg","setMsg","loader","setLoader","faMapMarkerAlt","faPhoneSquareAlt","faEnvelopeSquare","background","faUpload","financeScreen","frameBorder","allow","allowFullScreen","OpportunitiesScreen","InvestorProfileEditScreen","ChatScreen","contacts","conversationkey","alternateConversationkey","handleSession","contactItems","altKey","App","onAuthStateChanged","currentuser","path","exact","component","InvestorDetails","Login","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.132d75fb.chunk.js","sourcesContent":["export default function validateInfo(values) {\n    let errors = {};\n  \n    // Validation for username \n    if (!values.username.trim()) {\n      errors.username = 'Username required';\n    }\n    // else if (!/^[A-Za-z]+/.test(values.name.trim())) {\n    //   errors.name = 'Enter a valid name';\n    // }\n  \n    //validation for email\n    if (!values.email) {\n      errors.email = 'Email required';\n    } else if (!/\\S+@\\S+\\.\\S+/.test(values.email)) {\n      errors.email = 'Email address is invalid';\n    }\n\n    //validation for company name\n    if(!values.companyName.trim()){\n        errors.companyName = 'Business name is required';\n    }\n\n\n\n    //validation for password \n    if (!values.password) {\n      errors.password = 'Password is required';\n    } else if (values.password.length < 6) {\n      errors.password = 'Password needs to be 6 characters or more';\n    }\n    \n    // validation for confirm password.\n    if (!values.password2) {\n      errors.password2 = 'Password is required';\n    } else if (values.password2 !== values.password) {\n      errors.password2 = 'Passwords do not match';\n    }\n    return errors;\n  }","export default __webpack_public_path__ + \"static/media/nilenet.8a8ded15.png\";","import firebase from 'firebase';\n \n// Your web app's Firebase configuration\n // For Firebase JS SDK v7.20.0 and later, measurementId is optional\n const firebaseConfig = {\n   apiKey: \"AIzaSyDK_Bhc2ZFcn4eFIvyGVqmy1xFPjQlQBdA\",\n   authDomain: \"nilenet-c9b39.firebaseapp.com\",\n   projectId: \"nilenet-c9b39\",\n   storageBucket: \"nilenet-c9b39.appspot.com\",\n   messagingSenderId: \"1076430489041\",\n   appId: \"1:1076430489041:web:0e1da683f382aa55ba8cf0\",\n   measurementId: \"G-2549503YTQ\",\n   databaseURL: \"https://nilenet-c9b39-default-rtdb.firebaseio.com\"\n };\n // Initialize Firebase\nconst fire=  firebase.initializeApp(firebaseConfig);\n\n\n\nexport default fire;","import { useState,useEffect} from 'react';\nimport fire from './fire';\nimport {useHistory } from 'react-router-dom'\nconst useForm = (callback, validate) => {\n  //Creates all variables that will be used throughout the project\n  const [values, setValues] = useState({\n    type: '',\n    username: '',\n    surname: '',\n    companyName:'',\n    companyDescription: '',\n    numberofEmployees:'',\n    sectorOfBusiness:'',\n    email: '',\n    password: '',\n    password2: '',\n    user: '',\n    projectImage:'',\n    projectTitle: '',\n    projectStatus:'',\n    projectDescription:'',\n    projectId: [],\n  });\n\n  //states for errors\n  const [errors, setErrors] = useState({});\n\n  //Controls whether the button should submit or not\n  const [isSubmitting, setIsSubmitting] = useState(false);\n\n  //handles the changes happening within the text boxes\n  const handleChange = e => {\n    const { name, value } = e.target;\n    setValues({\n      ...values,\n      [name]: value\n    });\n\n    \n  };\n\n    //handles the changes happening within the text boxes\n    const handleChangeP = e => {\n      const { name, value } = e.target;\n      setValues({\n        ...values,\n        [name]: value\n      });\n  \n      \n    };\n\n  //submits contents within the investor page the database\n  const handleSubmitI = e => {\n    e.preventDefault();\n    const current = fire.auth().currentUser;\n    const db = fire.database();\n\n\n    setErrors(validate(values));\n    setIsSubmitting(true);\n    if(current != null){\n      db.ref('/users/Investors/' +  current.uid).set({\n        title: 'investors',\n        username: values.username,\n        surname: values.surname,\n        companyName: values.companyName,\n        estimatedAnnualRevenue: values.estimatedAnnualRevenue,\n        sectorOfBusiness: values.sectorOfBusiness,\n      }).then(()=>{\n        alert(\"Information has been successfully uploaded to database\")\n      })\n    }\n  };\n\n  //Submits entrepreneur data to the database\n  const handleSubmit = e => {\n    e.preventDefault();\n    const current = fire.auth().currentUser;\n    const db = fire.database();\n\n    \n\n    setErrors(validate(values));\n    setIsSubmitting(true);\n\n    if(current != null){\n      db.ref('/users/entrepreneurs/' +  current.uid).set({\n        \n        username: values.username,\n        surname: values.surname,\n        companyName: values.companyName,\n        BRnumber: values.BRnumber,\n        businessLocation: values.businessLocation,\n        estimatedAnnualRevenue: values.estimatedAnnualRevenue,\n        sectorOfBusiness: values.sectorOfBusiness,\n      }).then(()=>{\n        alert(\"Information has been successfully uploaded to database\")\n      })\n    }\n  };\n  \n\n  //handles the login button\n  function HandleLogin(){\n    setErrors(validate(values))\n    setIsSubmitting(true);\n    fire.auth().signInWithEmailAndPassword(values.email,values.password).then(()=>{\n      alert(\"You have successfully logged in \");\n      setValues({user:fire.auth().currentUser.uid})\n\n    \n    }).catch((e)=>{\n      alert(e);\n    })\n    \n  }\n\n  // handles the logout functionality\n  const handleLogout =(user)=>{\n    if(user){\n      fire.auth().signOut().then(()=>{\n        console.log(\"user signed out\");\n       \n\n      });\n    }else{\n      console.log(\"this button is not working\")\n      \n    }\n  }\n  //handles password reset\n  const handlePasswordReset= ( email)=>{\n      fire.auth().sendPasswordResetEmail(email).then(()=>{\n        alert(\"Email Sent\")\n      }).catch((e)=>{\n        alert(e)\n      })\n  }\n\n  //handles the sign up functionality\n  const handleSignup = ()=>{\n    setErrors(validate(values));\n    setIsSubmitting(true);\n    fire.auth().createUserWithEmailAndPassword(values.email,values.password).then(\n      ()=>{\n        const db = fire.database()\n        \n        var user = fire.auth().currentUser;\n        db.ref('/users/'+ user.uid).set({\n          type: values.type\n        }).then(()=>{\n          alert(\"successful upload\")\n        })\n        user.sendEmailVerification().catch((e)=>{\n          alert(\"an error occurred\", e)\n        }).then(()=>{\n          alert(\"Account Successfully created\");\n          setValues({user:true});\n        })\n      }\n    )\n  }\n\n  //handles the post\n  \n  useEffect(\n    () => {\n      if (Object.keys(errors).length === 0 && isSubmitting) {\n        callback();\n      }\n    },\n    [errors]\n  );\n\n  return {handleChangeP, handleChange, handleSubmit,values,handleSubmitI, errors, HandleLogin,handleLogout,handleSignup,setValues,handlePasswordReset};\n};\n\nexport default useForm;","import React,{useState} from 'react';\nimport validate from './validateInfo';\nimport logo from '../assets/nilenet.png' ;\nimport useForm from './useForm';\n\nconst InvestorLogin =()=>{\n\n    // calls functions from the useForm page\n    const { handleChange, handleSignup, values, errors,HandleLogin,handlePasswordReset} = useForm(\n    \n        validate\n    );\n    // create constant\n    const [hasAccount, sethasAccount] = useState(false);\n\n    return(\n     \n        <div>\n            <img alt=\"logo\" src={logo} className ='logo-img'/>\n            <div className='box'>\n                  {hasAccount ? (\n                      <>\n                      <h1>SIGN IN</h1>\n                        <input type = \"text\" \n                        className= \"box-input\"\n                        autoFocus \n                        required \n                        value={values.email} \n                        name =\"email\"\n                        onChange = {handleChange}\n                        placeholder='Insert Email'\n                        /><br/>\n                        <p>{errors.email}</p>\n                        <input type = \"password\"\n                        className= \"box-input\"\n                        required value={values.password} \n                        name=\"password\"\n                        onChange = {handleChange}\n                        placeholder= \"Insert Password\"\n                        /><br/>\n                        <p>{errors.password}</p>\n                        <input type=\"submit\" className=\"box-btn\" onClick={()=>{HandleLogin()}} value=\"Sign In\" />\n        \n                      <p>Dont have an Account? <span className=\"box-span\" onClick={()=> sethasAccount(!hasAccount)} >Sign up</span></p>\n                      <p>Forgot Password? <span className=\"box-span\" onClick={()=>{handlePasswordReset(values.email)}}>Reset</span></p>\n                      </>\n                  ): (\n                      <>\n                      <h1>SIGN UP</h1>\n                      <input type = \"text\" \n                        autoFocus\n                        className= \"box-input\"\n                        required \n                        value={values.email} \n                        name =\"email\"\n                        onChange = {handleChange}\n                        placeholder='Insert Email'\n                        /><br/>\n                        <p>{errors.email}</p>\n                        <select className=\"box-select\"\n                            name=\"type\"\n                            value={values.type}\n                            onChange={handleChange}\n                        >\n                            <option></option>\n                            <option value=\"Entrepreneur\"> Entrepreneur</option>\n                            <option value= \"Investor\">Investor</option>\n                        </select><br/>\n                        <input type = \"password\"\n                        className= \"box-input\" \n                        required value={values.password} \n                        name=\"password\"\n                        onChange = {handleChange}\n                        placeholder= \"Insert Password\"\n                        /><br/>\n                        <p>{errors.password}</p>\n                      <input type=\"password\" required value= {values.password2} \n                      className= \"box-input\"\n                      onChange={handleChange}\n                      name = \"password2\"\n                      placeholder=\"Confirm Password\"/><br/>\n                      <p>{errors.password2}</p>\n                      <input type=\"submit\" className=\"box-btn\" onClick={handleSignup} value= \"Sign Up\"/>\n                      <p>Have an Account? <span className=\"box-span\" onClick={()=> sethasAccount(!hasAccount)}>Sign in</span></p>\n                      \n                      </>\n\n                  )}\n\n                \n            </div>\n        </div>\n            \n    );\n\n}\n\nexport default InvestorLogin;","import React from 'react';\nimport validate from './validateInfo';\nimport useForm from './useForm';\nimport {Link} from 'react-router-dom';\n\n\nconst FormSignup = ({ submitForm }) => {\n  const { handleChange, handleSubmit, values, errors,} = useForm(\n    submitForm,\n    validate\n  );\n\n  \n  \n  return (\n    <div>\n      \n\n      <form  onSubmit={handleSubmit} class='box-signup' noValidate >\n\n        <h4>Entrepreneur Details</h4>\n         <input\n           type='text'\n           name='username'\n           placeholder='Enter your username'\n           value={values.username}\n           onChange={handleChange}\n         />\n\n         {/*Displays error for username input */}\n         {errors.username && <p>{errors.username}</p>}\n\n       {/*A div is created for each input field */}\n     \n           {/*Creates input box for username */}\n           <input\n           type='text'\n           name='surname'\n           placeholder='Enter your surname'\n           value={values.surname}\n           onChange={handleChange}\n           />\n\n           {/*Displays error for surname input */}\n           {errors.surname && <p>{errors.surname}</p>}\n\n         {/*Creates input box for Business Name */}\n         <input\n           type='text'\n           name='companyName'\n           placeholder='Enter your company name'\n           value={values.companyName}\n           onChange={handleChange}\n         />\n\n         {/*Displays error for companyName input */}\n         {errors.companyName && <p>{errors.companyName}</p>}\n\n       {/*A div is created for each input field */}\n           {/*Creates input box for username */}\n           <input\n           type='text'\n           name='BRnumber'\n           placeholder='Enter your Business Registration Number'\n           value={values.BRnumber}\n           onChange={handleChange}\n           />\n\n           {/*Displays error for BRnumber input */}\n           {errors.BRnumber && <p>{errors.BRnumber}</p>}\n               <input \n                   className='form-input'\n                   type='text'\n                   name='businessLocation'\n                   placeholder='Enter your Businesses location'\n                   value={values.businessLocation}\n                   onChange={handleChange}\n               />\n           <label>Estimated Annual Revenue</label>\n               {/*Creates input box for Estimated Annual Revenue*/}\n               <select\n               type='text'\n               name='estimatedAnnualRevenue'\n               placeholder='Enter your estimated Anual Revenue'\n               value={values.estimatedAnnualRevenue}\n               onChange={handleChange}\n               >\n               <option value =''></option>\n               <option value='1000-10000'>1000 - 10 000</option>\n               <option value='11000-50000'>11 000 - 50 000 </option>\n               <option value='51000-100000'>51 000 - 100 000</option> \n               <option value='110000-upwards'>110 000 and beyond</option>\n\n               </select>\n\n               {/*Displays error for Business Location input */}\n               {errors.estimatedAnnualRevenue && <p>{errors.estimatedAnnualRevenue}</p>}\n\n           {/*A div is created for each input field */}\n\n               {/*Creates label called business Name*/}\n\n\n               {/*Displays error for Business Location input */}\n               {errors.estimatedAnnualRevenue && <p>{errors.estimatedAnnualRevenue}</p>}\n\n               {/*Creates label called business Name*/}\n               <label>Sector of Business</label>\n\n               {/*Creates input box for Estimated Annual Revenue*/}\n               \n               <select\n                   type='text'\n                   name='sectorOfBusiness'\n                   placeholder='Enter your Businesses location'\n                   value={values.sectorOfBusiness}\n                   onChange={handleChange}\n               >\n                 <option value =''></option>\n                 <option value=\"Agriculture\">Agriculture</option>\n                 <option value= \"Manufacturing\">Manufacturing</option>\n                 <option value = \"Finance and Business\">Finance and Business</option>\n                 <option value = \"Tourism\">Tourism</option>\n\n               </select>\n               \n\n               {/*Displays error for Business Location input */}\n               {errors.estimatedAnnualRevenue && <p>{errors.estimatedAnnualRevenue}</p>}\n       \n       <Link to ='/h'>\n       Skip\n       </Link>\n       <input type='submit' onClick={handleSubmit} value=\"Submit\"/>\n       \n\n     </form>\n\n      </div>\n  );\n};\n\nexport default FormSignup;","import React from 'react';\nimport useForm from './useForm';\nimport validate from './validateInfo';\nimport { Link } from 'react-router-dom';\n\n\n\nconst InvestReg = ({ submitForm })=> {\n    const { handleChange, handleSubmitI, values, errors} = useForm(\n        submitForm,\n        validate\n      );\n        return(\n        <div>\n        \n\n            <div>\n\n                <form onSubmit = {handleSubmitI} class=\"box\" noValidate>\n                    <h1>Investor Details</h1>\n                    \n                    <input type=\"text\" value ={values.username} name=\"username\" onChange = {handleChange} placeholder= \"First Name...\"/>\n                    {/*Displays error for username input */}\n                    {errors.username && <p>{errors.username}</p>}\n                    <input type=\"text\" value ={values.surname} name=\"surname\" onChange = {handleChange} placeholder= \"Last Name...\"/>\n                    {/*Displays error for surname input */}\n                    {errors.surname && <p>{errors.surname}</p>}\n                    <select onChange={handleChange} name=\"sectorOfBusiness\" value={values.sectorOfBusiness}>\n                        <option value=\"sectors\">Select a sector</option>\n                        <option value=\"aggriSec\">Agrricutlure</option>\n                        <option value = \"entertainment\">Entertainment</option>\n                        <option value = \"busFin\">Business and Finance</option>\n                        <option value = \"fashion\">Retail</option>\n                    </select>\n                    <input type=\"text\" name=\"companyName\" value ={values.companyName} onChange = {handleChange} placeholder = \"Company Name\"/>\n                     {/*Displays error for companyName input */}\n                    {errors.companyName && <p>{errors.companyName}</p>}\n\n                    <select onChange={handleChange} name=\"estimatedAnnualRevenue\" value={values.estimatedAnnualRevenue}>\n                    <option value = \"base\">Select Revenue Range</option>\n                    <option value = \"tier1\">R1 000 - R50 000</option>\n                    <option value = \"tier2\">R50 001-R100 000 </option>\n                    <option value = \"tier3\">R100 001-R500 000</option>\n                    <option value = \"tier4\">R500 001-R1 000 000</option>\n                    <option value = \"tier5\"> R1 000 000 +</option>\n                    </select>\n\n\n                    <br/>\n                    <Link to='/h'> \n                        <input type=\"submit\" value =\"Submit\"/>\n                    </Link>\n                    \n\n                </form>\n             \n            </div>\n        </div>)\n    \n    \n    \n}\n \nexport default InvestReg;","import React, { Component } from 'react';\nimport fire from './fire';\nimport Chart from 'react-google-charts';\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome';\nimport {faArrowCircleLeft, faCogs,faArrowCircleRight} from '@fortawesome/free-solid-svg-icons'\nclass FeedScreen extends Component{\nconstructor(props){\n  super(props);\n\n  // create states to store data retrieved from database and user input.\n  this.state = {\n      items: [],\n      ProjectPosts: [],\n      images: [],\n      id: [],\n      typeDetermine:[],\n      projectTitle: [],\n      projectStatus: [],\n      projectDescription: [],\n      tag: [],\n      datapoints: [],\n      search: null,\n      query: [],\n      sectorOfBusiness:'',\n      users:[],\n      drawerOpen:false,\n      drawerClasses: 'side-drawer',\n      key:'',\n      drawerOpen1: false,\n      drawerClasses1: 'side-drawer-posts',\n      drawerOpen2: false,\n      drawerClasses2: 'side-drawer-message',\n      postkey: '',\n      Messages:[],\n      message:'',\n      ChatID:'',\n      thisU: `${fire.auth().currentUser.uid}`,\n      uid:'',\n      status:'Follow',\n  }\n\n  // bind this to all functions\n  this.handleChange= this.handleChange.bind(this);\n  this.drawerToggleClickHandler = this.drawerToggleClickHandler.bind(this);\n  this.drawerCloser = this.drawerCloser.bind(this);\n  this.drawerToggleClickHandler1 = this.drawerToggleClickHandler1.bind(this);\n  this.drawerToggleClickHandler2 = this.drawerToggleClickHandler2.bind(this);\n  this.drawerCloser1 = this.drawerCloser1.bind(this);\n  this.handleMessage= this.handleMessage.bind(this);\n  this.backdropClickHandler= this.backdropClickHandler.bind(this);\n  this.handleFollow = this.handleFollow.bind(this);\n\n}\n\n//handles follow functionality\nhandleFollow(uid,username,profileImage){\n  \n  if(this.state.status === 'Follow'){\n\n    // stores follower in the contacts section of database of the current user\n    fire.database().ref(`contacts/${fire.auth().currentUser.uid}/${this.state.key}`).set({\n      uid: uid,\n      username: username,\n      profileImage: profileImage,\n    }).then(this.setState({status: 'Following'}));\n  }\n\n\n  if(this.state.status === 'Following'){\n    // if the user unfollows their information is removed from the database.\n    fire.database().ref(`contacts/${fire.auth().currentUser.uid}/${this.state.key}`).remove().then(this.setState({status: 'Follow'}))\n  }\n}\n\n//handles message functionality\nhandleMessage(e,parsedUid){\n  const CurrentUid = fire.auth().currentUser.uid;\n      \n  let sessionId = CurrentUid + this.state.key;\n  let alternateSessionId = this.state.key + CurrentUid;\n\n   \n   \n  \n\n  var messageId = Date.now();\n  var today = new Date();\n  var time = today.getHours() + ':' + ((today.getMinutes() < 10 ? '0': '') + today.getMinutes());\n\n  fire.database().ref(`chats/users/${CurrentUid}/${sessionId}/${messageId}`).set({\n\n      messageId: messageId,\n      chatUid: sessionId,\n      message: this.state.message,\n      time: time,\n      uid: CurrentUid\n  });\n\n  fire.database().ref(`chats/${sessionId}/${messageId}`).set({\n      messageId: messageId,\n      chatUid: sessionId,\n      message: this.state.message,\n      time: time,\n      uid: CurrentUid\n  })\n  fire.database().ref(`chats/${alternateSessionId}/${messageId}`).set({\n      messageId: messageId,\n      chatUid: sessionId,\n      message: this.state.message,\n      time: time,\n      uid: CurrentUid\n  })\n \n}\n//handles change for user input\nhandleChange(event){\n  this.setState({\n      [event.target.name]: event.target.value\n  })\n\n}\n\n//opens a side drawer where user information can be viewed.\ndrawerToggleClickHandler = (userid) => {\n  this.setState({drawerOpen: !this.state.drawerOpen});\n  this.setState({drawerClasses:'side-drawer open'});\n  this.setState({key:userid});\n  console.log(this.state.key);\n\n\n}\n//opens a side drawer where user posts can be viewed.\ndrawerToggleClickHandler1 = (uid) => {\n  this.setState({postkey: uid})\n  this.setState({drawerOpen:false});\n  this.setState({drawerClasses:'side-drawer'});\n  this.setState({drawerOpen1: !this.state.drawerOpen1});\n  this.setState({drawerClasses1:'side-drawer-posts open'});\n\n\n\n}\n//opens side drawer where the user can chat to the specific individual.\ndrawerToggleClickHandler2 = (variable) => {\n  \n  this.setState({drawerOpen: false});\n  this.setState({drawerClasses:'side-drawer'});\n  this.setState({drawerOpen2: !this.state.drawerOpen2});\n  this.setState({drawerClasses2:'side-drawer-message open'});\n\n\n\n}\n// closes chat side drawer\nbackdropClickHandler=()=>{\n  this.setState({drawerOpen2: false});\n  this.setState({drawerClasses2: 'side-drawer-message'});\n}\n\n//closes information viewer side drawer\ndrawerCloser = ()=>{\n  this.setState({drawerOpen:false});\n  this.setState({drawerClasses:'side-drawer'});\n\n}\n//closes posts side drawer.\ndrawerCloser1 = ()=>{\n  this.setState({drawerOpen1:false});\n  this.setState({drawerClasses1:'side-drawer-posts'});\n}\n\n\n\n\ncomponentDidMount(){\n\n\n  // retrieves chat information and stores it into a state variable.\n  fire.database().ref(`chats/`).on('value', snapshot=>{\n        \n    let sessionId = Object.keys(snapshot.val());\n    console.log(sessionId);\n    var extensionArray = [];\n\n        Object.values(sessionId).map(items=>{\n            console.log(items);\n            fire.database().ref(`chats/${items}/`).on('value', childshot=>{\n\n                Object.values(childshot.val()).map(items=>{\n                    console.log(items.message);\n                    let messages = [];\n                    messages.push({\n                        chatUid: items.chatUid,\n                        message: items.message,\n                        time: items.time,\n                        messageId: items.messageId,\n                        uid: items.uid\n                    })\n                    extensionArray = [...extensionArray, messages];\n                    this.setState({Messages: extensionArray});\n                })\n           \n\n            \n        \n            })\n        });\n})\n\n// retrieves entrepreneur Information and then stores it into a state.\n  fire.database().ref(`users/entrepreneurInfo`).on('value', snapshot =>{\n    \n    if(snapshot.exists()){\n        let userInfo = snapshot.val();\n        let userKeys = Object.keys(userInfo);\n        let extensionArray = [];\n      for(let x = 0; x< userKeys.length; x++){\n        \n        var key = userKeys[x];\n        var array = [userInfo[key]];\n        array.map(item=>{\n          let newItems=[];\n          newItems.push({\n            id:userKeys[x],\n            profileImage: item.profileImage,\n            username: item.username,\n            companyName: item.companyName\n          })\n          extensionArray = [...extensionArray, newItems];\n          this.setState({users:extensionArray});\n        })\n            \n    \n      }    \n    }\n  });\n\n  const current = fire.auth().currentUser.uid;\n  const db = fire.database();\n  \n  //retreives user type from database.\n  db.ref(`users/${current}`).on('value', snapshot=>{\n\n    if(snapshot.exists()){\n      let item = snapshot.val();\n  \n\n      if(item.type === 'Entrepreneur'){\n        db.ref(`users/entrepreneur/${current}`).on('value', snapshot=>{\n          let Item = snapshot.val();\n          this.setState({sectorOfBusiness:Item.sectorOfBusiness});\n          console.log(this.state.sectorOfBusiness);\n    \n        })\n      }else if(item.type === 'Investor'){\n        db.ref(`users/investorInfo/${current}`).on('value', snapshot=>{\n          this.setState({sectorOfBusiness: snapshot.val().sectorOfBusiness});\n          console.log(this.state.sectorOfBusiness);\n        })\n      }\n    }\n  })\n\n\n\n    // retrieves charts data and stores it in a state.\n    db.ref(`charts`).on('value', snapshot=>{\n      if(snapshot.exists()){\n        var chartValues = snapshot.val();\n        let chartItems = Object.keys(snapshot.val());\n        console.log(chartItems.length);\n        let extensionArray = [];\n        for (var x = 0; x < chartItems.length; x++){\n  \n         var key = chartItems[x];\n         var array = [chartValues[key]];\n  \n         console.log(chartItems);\n         console.log(array);\n         \n            array.map(item =>{\n              let NewItems =[];\n              NewItems.push({\n    \n                id: chartItems[x],\n                point1: item.point1,\n                point2: item.point2,\n                point3: item.point3,\n                tag1: item.tag1,\n                tag2: item.tag2,\n                tag3: item.tag3,\n                sectorOfBusiness: item.sectorOfBusiness,\n              })\n              extensionArray = [...extensionArray, NewItems];\n              this.setState({query: extensionArray});\n            })\n        }\n      }\n    })\n    \n    // retrieves posts from database and stores it in a state\n    fire.database().ref(`posts/entrepreneurs/${this.state.key}`).on('value', snapshot=>{\n      if(snapshot.exists()){\n        let postValues = snapshot.val();\n        let postKeys = Object.keys(postValues);\n    \n        var extensionArray = [];\n          let newItems = [];\n        for(let x = 0; x < postKeys.length; x++){\n          var keys = postKeys[x];\n  \n          var parentkey = Object.values(postValues[keys]);\n    \n          parentkey.map(item=>{\n              newItems.push({\n                profileImage: item.profileImage,\n                username: item.username,\n                projectImage: item.projectImage,\n                projectId:item.id,\n                uid: item.uid,\n                projectTitle: item.projectTitle,\n                projectStatus: item.projectStatus,\n                projectDescription: item.projectDescription\n              })\n              extensionArray = [...extensionArray, newItems];\n              this.setState({ProjectPosts: newItems});\n          })\n        }\n      }\n\n    })\n\n\n\n}\nrender(){\n  return(\n    <div >\n      <div className=\"feed-search\">\n        <input type=\"text\" \n        name=\"search\"\n        className=\"feed-input\" \n        placeholder=\"Search...\"\n        value={this.state.search}\n        onChange={this.handleChange}\n        />\n      </div>\n      <div show={this.state.drawerOpen2}   className={this.state.drawerClasses2}>\n                <div className=\"profileView-TopSection\">\n                    <div className=\"profileView-back\">\n                        <h2 className=\"profileView-icon\" onClick={this.backdropClickHandler}>\n                        <FontAwesomeIcon icon={faArrowCircleLeft} size={70}/>\n                        </h2>\n                    </div>\n                    <div>\n                        <h1>Message</h1>\n                    </div>\n                    <div>\n                        {//maps user data to the frontend\n                        this.state.users.map(items=>items.map(value=>{\n                          console.log(value.id);\n                            if(value.id === this.state.key){\n\n                                return(\n                                    <div style={{overflow:'hidden'}}>\n                                    <div style={{display:'inline-block',borderBottom:'0.5px solid black',width:'100%'}}>\n                                        <img src={value.profileImage} alt=\"profile\" className=\"feed-profile\"/> \n                                        <h6 style={{color:'black'}}>{value.username}</h6>\n                                    </div>\n                                    <div >\n\n                                        </div>\n                                        <div className=\"message-container\">\n                                            {//maps messages to the front End\n                                            this.state.Messages.map(item=> item.map(text=>{\n                                                if(text.chatUid === (this.state.thisU + this.state.key )){\n                                                    if(text.uid === this.state.thisU){\n                                                        return(\n                                                            <div className=\"messageReceiver\" key={this.state.thisU}>\n                                                                <div className=\"messageReceiverR\" >\n                                                                    <p>\n                                                                        {text.message}\n                                                                        <h10\n                                                                        style={{float:'right',\n                                                                                paddingRight:'10px'    \n                                                                            }}\n                                                                        ><br/>\n                                                                            {text.time}\n                                                                        </h10>\n                                                                    \n                                                                    </p>\n                                                                </div>\n                                                            </div>\n                                                        )\n                                                    }\n                                                }else if(text.chatUid ===(this.state.key + this.state.thisU)){\n                                                    if(text.uid === this.state.key){\n                                                        return(\n                                                            <div className=\"messageSender\">\n                                                                <div className=\"messageReceiverS\">\n                                                                    <p>\n                                                                        {text.message}\n                                                                        <h10\n                                                                            style={{paddingLeft:'10px'}}\n                                                                        ><br/>\n                                                                            {text.time}\n                                                                        </h10>\n                                                                    </p>\n                                                                </div>\n                                                            </div>\n                                                        )\n                                                    }\n                                                }\n\n\n                                            \n                                    \n                                            }))}\n                                        </div>\n                                        <footer className=\"message-footer\">\n                                            <h5>\n                                            <input\n                                            id=\"message\"\n                                            className=\"message-input\"\n                                            autoComplete= \"off\"\n                                            type=\"text\"\n                                            name=\"message\"\n                                            placeholder=\"Type a message\"\n                                            onChange={this.handleChange}\n                                            value={this.state.value}\n\n                                            /> <h3 \n                                                    className=\"message-btn\"\n                                                    onClick={(e)=>this.handleMessage(e,this.state.uid)}\n                                                    ><FontAwesomeIcon \n                                                    icon={faArrowCircleRight} \n                                                    size=\"2x\" \n                                                    color=\"black\"\n                                                    \n                                                    />\n                                                </h3>\n                                            </h5>\n                                        </footer>\n                                    \n                                    </div>\n                                    \n                                )\n                            }\n                        }))}\n                    </div>\n\n                </div>\n      </div>\n      <div show={this.state.drawerOpen1} className={this.state.drawerClasses1} >\n      <div className=\"profileView-TopSection\">\n          <div className=\"profileView-back\">\n            <h2 className=\"profileView-icon\" onClick={this.drawerCloser1}>\n              <FontAwesomeIcon icon={faArrowCircleLeft} size={70}/>\n            </h2>\n          </div>\n          <div>\n            <h1>Posts</h1>\n          </div>\n          <div className=\"profileView-body\">\n          {//displays posts to the Front End.\n            this.state.ProjectPosts.map(item=>{\n              if(this.state.postkey === item.uid){\n                return(\n                  <div className=\"postsView\" key={item.projectId} >                    \n                    <img alt= \"project\" src={item.projectImage} \n                      className=\"postsView-image\" \n                      width={200} \n                      height={200} \n                    />\n                    <div className=\"PostsView-content\">\n                      <h4>{item.projectTitle}</h4><br/>\n                      <h6>{item.projectStatus}</h6>\n                      <p>{item.projectDescription}</p>\n                    </div>\n                  </div>\n                )\n              }\n          })}\n        </div>\n      </div>\n    </div>\n    <div show={this.state.drawerOpen}  className={this.state.drawerClasses}>\n      <div className=\"profile-content\">\n\n      {this.state.users.map(user=>user.map(variable=>{\n        for(let x = 0; x < this.state.users.length; x++){\n          var key = this.state.users[x];\n          console.log(key);\n          while(variable.id === this.state.key){\n            return(\n              <div>\n                <div className=\"profileView-TopSection\">\n                <div className=\"profileView-back\">\n                  <h2 className=\"profileView-icon\" onClick={this.drawerCloser}>\n                    <FontAwesomeIcon icon={faArrowCircleLeft} size={70}/>\n                  </h2>\n                </div>\n                <div>\n                  <h1>{variable.companyName}</h1>\n                </div>\n                </div>\n\n                <div className=\"profileView-body\">\n                  <img src={variable.profileImage} alt=\"profile\" key={variable.id} className=\"profile-pic\"/>\n                  <h1>{variable.username}</h1>\n                  <div className=\"profileView-followerSection\">\n                  <button className=\"profile-btn\" onClick={()=>this.handleFollow(variable.id, variable.username,variable.profileImage)}>\n                    {this.state.status}\n                  </button>\n                  <button className=\"profile-btn\" onClick={()=>this.drawerToggleClickHandler2(variable.id)}>\n                    Message\n                  </button>\n                  </div>\n                  <div className=\"profileView-postSection\">\n\n                      <div className=\"profileView-banner\">\n                        <div className=\"profileView-bannerIcon\"> <FontAwesomeIcon icon={faCogs} size=\"2x\"/></div>\n                        <div className=\"profileView-bannerTitle\"><h4>Projects</h4></div>\n                      </div>\n                      <div className=\"profileView-container\">\n                      {this.state.ProjectPosts.map(post=>{\n                        if(variable.id === post.uid){\n                          return(\n                        \n                            <img className=\"profileView-posts\" src={post.projectImage} onClick={()=>this.drawerToggleClickHandler1(post.uid)}/>  \n                          ) \n                        }\n                                              \n                      })}\n                     </div>\n                  </div>\n                </div>\n              </div>\n            )            \n          }\n        }\n\n    }))}\n      </div>\n    </div>\n\n\n\n\n      <div className=\"feed-gradient\">\n\n      </div>\n      <div className=\"feed-container\">\n\n \n        {this.state.query.map(items=>items.map((value,index)=>{\n            if(value.sectorOfBusiness.indexOf(this.state.search) >-1 ){\n              return(\n                <div className=\"feed-content\" key={value.id}>\n                  {this.state.users.map(user=>user.map(variable=>{\n                    if(value.id === variable.id){\n\n                      return(\n                        <div style={{display:'inline-block'}} >\n                          <img src={variable.profileImage} alt=\"profile\" className=\"feed-profile\"/>\n                          <span><h6 onClick={()=>this.drawerToggleClickHandler(value.id)}>{variable.username}</h6></span><br/>\n                        </div>\n                      )\n                    }\n\n                  }))}\n                <div style={{display:'inline-block'}}>\n                <Chart\n                  chartType=\"PieChart\"\n                  width={400}\n                  height={400}\n                  loading={<div>Loadiing Chart...</div>}         \n                  data={[[\"labels\",\"percentages\"],\n                  [value.tag1,value.point1],\n                  [value.tag2,value.point2],\n                  [value.tag3, value.point3]\n              ]}\n              options={{title: 'Overview of Business'}}\n                />\n                </div>\n\n                </div>\n\n              )\n            }else if(value.sectorOfBusiness === this.state.sectorOfBusiness){\n              console.log(Object.values(value)[index]);\n              return(\n                <div className=\"feed-content\" key={value.id}>\n                {this.state.users.map(user=>user.map(variable=>{\n                    console.log(user);\n                    if(value.id === variable.id){\n                      return(\n                        <div style={{display:'inline-block'}}>\n                          <img  \n                          src={variable.profileImage} \n                          alt=\"profile\" \n                          className=\"feed-profile\"\n                          onClick={()=>this.drawerToggleClickHandler(value.id)}\n                          />\n                          <span><h6 onClick={()=>this.drawerToggleClickHandler(value.id)}>{variable.username}</h6></span><br/>\n                        </div>\n                      )\n                    }\n\n                  }))}\n                <div style={{display:'inline-block'}}>\n                <Chart\n                  chartType=\"PieChart\"\n                  width={400}\n                  height={400}\n                  loading={<div>Loadiing Chart...</div>}         \n                  data={[[\"labels\",\"percentages\"],\n                  [value.tag1,value.point1],\n                  [value.tag2,value.point2],\n                  [value.tag3, value.point3]\n              ]}\n              options={{title: 'Overview of Business'}}\n                />\n                </div>\n\n                </div>\n\n              )\n            }\n        })\n\n        )}\n\n          \n      </div>\n      <div className=\"feed-gradient-footer\">\n      </div>\n\n    </div>\n  );\n}\n\n}\nexport default FeedScreen;","import React, { useEffect,useState } from 'react';\nimport { NavLink } from 'react-router-dom';\nimport { NavItem, Navbar} from 'reactstrap';\nimport {Nav} from 'react-bootstrap';\nimport logo from '../assets/nilenet.png' ;\nimport validate from './validateInfo';\nimport useForm from './useForm';\nimport fire from './fire';\nimport '../components/styles.css';\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome';\nimport {faArrowCircleLeft, \n  faUserCircle, \n  faSignOutAlt,\n  faWindowRestore, \n  faHome,\n  faWrench,\n  faChartPie, \n  faChartLine, \n  faTh, \n  faPlusCircle,\n  faCogs} from '@fortawesome/free-solid-svg-icons'\n\n\n\n\nconst Navigation = () => {\n    // calls logout function from useForm page\n    const { handleLogout} = useForm(\n        validate\n      );\n      // create states\n      var [items, setItems] = useState([]);\n      var [Posts, setPosts] = useState([]);\n      var [values, setValues] = useState({\n        drawerOpen: false,\n        drawerOpen1: false,\n        drawerClasses: 'navbar-side',\n        drawerClasses1: 'navbar-navitems'\n      })\n      var [ state, setState] = useState('');\n      const drawerToggleClickHandler = () => {\n        setValues({drawerOpen: !values.drawerOpen});\n        setValues({drawerClasses:'navbar-side open'});\n\n      \n      \n      }\n      //closes side drawer\n      const drawerCloser1 = ()=>{\n        setValues({drawerOpen:false});\n        setValues({drawerClasses:'navbar-side'});\n      }\n\n      // listens for changes\n    useEffect(()=>{\n      fire.database().ref(`users/${fire.auth().currentUser.uid}`).on('value', snapshot =>{\n        if(snapshot.exists()){\n          let Items = snapshot.val();\n          let newItems = [];\n          for(let x = 0; x< 1; x++){\n           \n                newItems.push({\n                   type: Items.type,\n                   \n                });\n        \n          }\n\n          setItems(items = newItems);\n        }\n      });\n\n    // retreives entrepreneur data from database\n    fire.database().ref(`users/entrepreneurInfo/${fire.auth().currentUser.uid}`).on('value', snapshot =>{\n      if(snapshot.exists()){\n\n        let Items = snapshot.val();\n       let newItems = [];\n       for(let x = 0; x< 1; x++){\n        \n             newItems.push({\n                 username: Items.username,\n                 profileImage: Items.profileImage,\n             });\n          setState(state = Items.profileImage);\n       }\n        setPosts(Posts= newItems);\n      }\n  });\n    },[])\n\n    return (\n     \n      <div>\n        { // displays data to the front End\n        items.map(item=>{\n          if(item.type === 'Investor'){\n            return(\n              <nav className=\"navbar\">\n                <div show={values.drawerOpen} className={values.drawerClasses}>\n                  <div className=\"profileView-TopSection\">\n                  <div className=\"profileView-back\">\n                      <h2 className=\"profileView-icon\" onClick={drawerCloser1}>\n                        <FontAwesomeIcon icon={faArrowCircleLeft} size={70}/>\n                      </h2>\n                  </div>\n\n                  </div>\n                  <Nav className=\"ml-auto\">\n                    <NavItem className=\"navigation-items\">\n                      <NavLink to = '/profile' className=\"nav-link\">\n                      <span style={{color:'black'}}>\n                      <FontAwesomeIcon icon={faUserCircle} size='1x' color=\"black\"/> \n                      <h6>\n                        Profile\n                      </h6>\n                      </span>\n                      </NavLink>\n                    </NavItem>\n                  <NavItem className=\"navigation-items\" >\n                      <NavLink to=\"/\" className=\"nav-link\" color=\"black\">\n                      <span style={{color:'black'}}>\n                      <FontAwesomeIcon icon={faHome} size='1x' color=\"black\"/> \n                      <h6>\n                        Home\n                      </h6>\n                      </span>\n                      </NavLink>\n                    </NavItem>\n                    <NavItem className=\"navigation-items\">\n                      <NavLink to=\"/resources\" className=\"nav-link\">\n                      <span style={{color:'black'}}>\n                      <FontAwesomeIcon icon={faWindowRestore} size='1x' color=\"black\"/> \n                      <h6>\n                        Resources\n                      </h6>\n                      </span>\n                      </NavLink>\n                    </NavItem>\n                    <NavItem className=\"navigation-items\">\n                    <NavLink to=\"/feed\" className=\"nav-link\">\n                    <span style={{color:'black'}}>\n                      <FontAwesomeIcon icon={faTh} size='1x' color=\"black\"/> \n                      <div>\n                        <h6 >Feed</h6>\n                      </div>\n                      </span>\n                      </NavLink>\n                    </NavItem>\n                    <NavItem className=\"navigation-items\">\n                    <NavLink to=\"/projects\" className=\"nav-link\">\n                    <span style={{color:'black'}}>\n                      <FontAwesomeIcon icon={faCogs} size='1x' color=\"black\"/> \n                      <div>\n                        <h6 >Projects</h6>\n                      </div>\n                      </span>\n                      </NavLink>\n                    </NavItem>\n                    <NavItem className=\"navigation-items\">\n                    <NavLink to=\"/createpost\" className=\"nav-link\">\n                    <span style={{color:'black'}}>\n                      <FontAwesomeIcon icon={faPlusCircle} size='1x' color=\"black\"/> \n                      <div>\n                        <h6 >Create Post</h6>\n                      </div>\n                      </span>\n                      </NavLink>\n                    </NavItem>\n                    <NavItem className=\"navigation-items\">\n                    <NavLink to=\"/opportunities\" className=\"nav-link\">\n                    <span style={{color:'black'}}>\n                      <FontAwesomeIcon icon={faChartLine} size='1x' color=\"black\"/> \n                      <h6>\n                        Opportunities\n                      </h6>\n                      </span>\n                      </NavLink>\n                    </NavItem>\n                    <NavItem className=\"navigation-items\">\n                    <NavLink to=\"/support\" className=\"nav-link\">\n                      <span style={{color:'black'}}>\n                      <FontAwesomeIcon icon={faWrench} size='1x' color=\"black\"/> \n                      <h6>\n                        Support\n                      </h6>\n                      </span>\n                      </NavLink>\n                    </NavItem>\n                    <NavItem onClick={()=>handleLogout(fire.auth().currentUser)} className=\"navigation-items\">\n                      <NavLink to = '/' className=\"nav-link\">\n                      <span style={{color:'black'}}>\n                      \n                        <FontAwesomeIcon icon={faSignOutAlt} size=\"1x\" color=\"black\"/> \n                      <h6>\n                        Sign Out\n                      </h6>\n                      </span>\n                      </NavLink>\n\n                    </NavItem>\n                  </Nav>\n                </div>\n              <div className=\"container-fluid\">\n                  <a href=\"/\"><img  alt = 'logo' className=\"nav-logo\"src={logo} size=\"20px\"/></a>\n                    <NavItem>\n                    {\n                        state ?(\n                          Posts.map(item=>{\n\n                            return(\n                              <a>\n                                <img className=\"nav-image\" src={item.profileImage} onClick={drawerToggleClickHandler} alt=\"user profile\" size={200}/>\n                              </a>\n        \n                             \n                            )\n                            })\n                          \n                        ):(\n                          <h6 onClick={drawerToggleClickHandler}>menu</h6>\n                        )\n                      }\n                    </NavItem>\n              </div>\n            </nav>\n        \n            )\n          }else if(item.type === \"Entrepreneur\"){\n            return(\n              \n              <nav className=\"navbar\">\n                <div show={values.drawerOpen} className={values.drawerClasses}>\n                  <div className=\"profileView-TopSection\">\n                  <div className=\"profileView-back\">\n                      <h2 className=\"profileView-icon\" onClick={drawerCloser1}>\n                        <FontAwesomeIcon icon={faArrowCircleLeft} size={70}/>\n                      </h2>\n                  </div>\n\n                  </div>\n                  <Nav className=\"ml-auto\">\n                    <NavItem className=\"navigation-items\">\n                      <NavLink to = '/profile' className=\"nav-link\">\n                      <span style={{color:'black'}}>\n                      <FontAwesomeIcon icon={faUserCircle} size='1x' color=\"black\"/> \n                      <h7 style={{padding: '10px'}}>\n                        Profile\n                      </h7>\n                      </span>\n                      </NavLink>\n                    </NavItem>\n                  <NavItem className=\"navigation-items\" >\n                      <NavLink to=\"/\" className=\"nav-link\" color=\"black\">\n                      <span style={{color:'black'}}>\n                      <FontAwesomeIcon icon={faHome} size='1x' color=\"black\"/>    \n                      <h7 style={{padding: '10px'}}>\n                        Home\n                      </h7>\n                      </span> \n                      </NavLink>\n                    </NavItem>\n                    <NavItem className=\"navigation-items\">\n                      <NavLink to=\"/resources\" className=\"nav-link\">\n                      <span style={{color:'black'}}>\n                      <FontAwesomeIcon icon={faWindowRestore} size='1x' color=\"black\"/><br/>\n                      <h8>\n                        Resources\n                      </h8>\n                      </span>\n                      </NavLink>\n                    </NavItem>\n                    <NavItem className=\"navigation-items\">\n                    <NavLink to=\"/feed\" className=\"nav-link\">\n                    <span style={{color:'black'}}>\n                      <FontAwesomeIcon icon={faTh} size='1x' color=\"black\"/> \n                      <div>\n                        <h7 >Feed</h7>\n                      </div>\n                      </span>\n                      </NavLink>\n                    </NavItem>\n                    <NavItem className=\"navigation-items\">\n                    <NavLink to=\"/projects\" className=\"nav-link\">\n                    <span style={{color:'black'}}>\n                      <FontAwesomeIcon icon={faCogs} size='1x' color=\"black\"/> \n                      <div>\n                        <h7 >Projects</h7>\n                      </div>\n                      </span>\n                      </NavLink>\n                    </NavItem>\n                    <NavItem className=\"navigation-items\">\n                    <NavLink to=\"/createpost\" className=\"nav-link\">\n                    <span style={{color:'black'}}>\n                      <FontAwesomeIcon icon={faPlusCircle} size='1x' color=\"black\"/> \n                      <div>\n                        <h7 >Create Post</h7>\n                      </div>\n                      </span>\n                      </NavLink>\n                    </NavItem>\n                    <NavItem className=\"navigation-items\">\n                    <NavLink to=\"/opportunities\" className=\"nav-link\">\n                    <span style={{color:'black'}}>\n                      <FontAwesomeIcon icon={faChartLine} size='1x' color=\"black\"/> \n                      <h6>\n                        Opportunities\n                      </h6>\n                      </span>\n                      </NavLink>\n                    </NavItem>\n                    <NavItem className=\"navigation-items\">\n                    <NavLink to=\"/mybusiness\" className=\"nav-link\">\n                    <span style={{color:'black'}}>\n                      <FontAwesomeIcon icon={faChartPie} size='1x' color=\"black\"/> \n                      <h6>\n                        My Business\n                      </h6>\n                      </span>\n                      </NavLink>\n                    </NavItem>\n                    <NavItem className=\"navigation-items\">\n                    <NavLink to=\"/support\" className=\"nav-link\">\n                      <span style={{color:'black'}}>\n                      <FontAwesomeIcon icon={faWrench} size='1x' color=\"black\"/> \n                      <h6>\n                        Support\n                      </h6>\n                      </span>\n                      </NavLink>\n                    </NavItem>\n                    <NavItem onClick={()=>handleLogout(fire.auth().currentUser)} className=\"navigation-items\">\n                      <NavLink to = '/' className=\"nav-link\">\n                      <span style={{color:'black'}}>\n                      \n                        <FontAwesomeIcon icon={faSignOutAlt} size=\"1x\" color=\"black\"/> \n                      <h6>\n                        Sign Out\n                      </h6>\n                      </span>\n                      </NavLink>\n\n                    </NavItem>\n                  </Nav>\n                </div>\n             \n              <div className=\"container-fluid\">\n                  <a href=\"/\"><img  alt = 'logo' className=\"nav-logo\"src={logo} size=\"20px\"/></a>\n                    <NavItem>\n                    {// if theres a profile image, a profile image should be displayed. If not a menu text should be\n                        state ?(\n                          Posts.map(item=>{\n\n                            return(\n                              <a>\n                                <img className=\"nav-image\" src={item.profileImage} onClick={drawerToggleClickHandler} alt=\"user profile\" size={200}/>\n                              </a>\n        \n                             \n                            )\n                            })\n                          \n                        ):(\n                          <h6 onClick={drawerToggleClickHandler}>menu</h6>\n                        )\n                      }\n                    </NavItem>\n              </div>\n            </nav>\n            )\n          }\n\n        })}\n        \n      </div>\n    )\n  };\n  \n  export default Navigation;","import React, { Component } from \"react\";\n\n\n \nclass About extends Component {\n  render() {\n    return (\n        <div>\n          \n\n          <div className=\"content\">\n          <h1>About Us</h1>\n          <h2>SMME Network Portal</h2>\n          <h3>-NILENET-</h3>\n          <p>\n          NILENET support and enable SMEs and entrepreneurs to access markets, funding, \n          as well as lobby and advocate for a more accommodating policies and legislation to ensure their long-term success.<br/>\n          -A digital platform where entrepreneurs/SMMEs/startups can go to access the information they need to help them get to the next level of their business journey.<br/>\n\n          This portal is an exclusive platform for SMMEs in all major sectors including \n          agriculture, technology, manufacturing and finance.<br/>This Portal ultimately targets all \n          sectors but through a voting process, SAWG highlighted sectors below, and to select one to pilot portal\n          with:<br/>\n          • Agriculture<br/>\n          • Finance and Business Services<br/>\n          • Manufacturing<br/>\n          • Tourism<br/>\n          • Community, Social and Personal Services<br/>\n          \n          SMMES can access markets, access to  funding, compliance/capacity building support.<br/>\n          Nilenet platform can also be used for advocacy to policymakers on behalf of entrepreneurs.<br/>\n          \n\n\n          </p>\n          </div>\n        </div>\n\n    );\n  }\n}\n\nexport default About;","export default __webpack_public_path__ + \"static/media/pic3.b5c520a9.jpg\";","export default __webpack_public_path__ + \"static/media/city.4147a811.jpg\";","import React, {useEffect, useState, Component } from 'react';\nimport {  NavItem} from 'reactstrap';\nimport { NavLink } from 'react-router-dom';\nimport pic3 from '../assets/pic3.jpg';\nimport fire from './fire';\nimport pic from '../assets/city.jpg';\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome';\nimport { faCogs,faArrowCircleLeft,faTrash} from '@fortawesome/free-solid-svg-icons'\n\n\nfunction ProfileScreen(){\n   \n\n// create state variables.\n   var [items, setItems] = useState([]);\n   var [type, setType] = useState('entrepreneur');\n   var [typeReader, setTypeReader] = useState('');\n   var [Posts, setPosts] = useState([]);\n   var [state, setState] = useState('');\n   var [entrepreneurPosts, setEntrepreneurPosts] = useState([]);\n   var [entrepreneuritems, setEntrepreneurItems] = useState([]);\n   const [values, setValues] = useState({\n    drawerOpen: false,\n    drawerClasses: 'side-drawer-posts'\n});\n\n// deletes posts\nfunction deleteContent(projectId){\n    fire.database().ref(`posts/entrepreneurs/${fire.auth().currentUser.uid}`).child(projectId).remove().then(alert('Content successfully deleted'));\n    fire.database().ref(`public/posts/entrepreneurs`).child(projectId).remove();\n}\n    // displays side drawer\n   const drawerToggleClickHandler = ()=>{\n    setValues({\n        drawerOpen: true,\n        drawerClasses:'side-drawer-posts open'\n   });\n    }\n    // closes side drawer\n    const drawerCloser = ()=>{\n        setValues({drawerOpen:false});\n        setValues({drawerClasses:'side-drawer-posts'});\n    }\n //listens for changes\n   useEffect(()=>{\n       // retreives entrepreneur data and stores it in a state.\n       fire.database().ref(`users/entrepreneurInfo/${fire.auth().currentUser.uid}`).on('value', snapshot =>{\n           if(snapshot.exists()){\n                let Items = snapshot.val();\n                let newItems = [];\n                for(let x = 0; x< 1; x++){\n                \n                    newItems.push({\n                        username: Items.username,\n                        companyName: Items.companyName,\n                        profileImage: Items.profileImage,\n                        sectorOfBusiness: Items.sectorOfBusiness,\n                            \n                    });\n            \n                }\n                setItems(items = newItems);\n           }\n\n       });\n    \n       // constant for user unique id\n       const current = fire.auth().currentUser.uid;\n       // retreives user type data from database\n       fire.database().ref(`users/${current}`).on('value', snapshot=>{\n           if(snapshot.exists()){\n        \n            let types = snapshot.val();\n            let newType=[];\n   \n             setType(type = types.type);\n             console.log(type);\n \n             if(type === 'Entrepreneur'){\n                 setTypeReader(typeReader = 'Entrepreneur');\n             }else if(type === 'Investor'){\n                 setTypeReader(typeReader = '');\n             }\n           }\n       });\n\n       if(type === 'Entrepreneur'){\n           // retreives current users posts from database\n        fire.database().ref(`posts/entrepreneurs/`).child(`${current}`).on('value',snapshot=>{\n            \n            if(snapshot.exists()){\n                let projectId = Object.values(snapshot.val());\n                let newPosts = [];\n                let projectChildren = Object.values(projectId).forEach(childsnapshot =>{\n           \n                  \n                      newPosts.push({\n                          projectImage: childsnapshot.projectImage,\n                          projectId:childsnapshot.id,\n                          projectTitle: childsnapshot.projectTitle,\n                          projectStatus: childsnapshot.projectStatus,\n                          projectDescription: childsnapshot.projectDescription\n                      })\n                  setState(state = childsnapshot.projectImage);\n                  setPosts(Posts = newPosts);\n                });\n            }\n         })\n    \n         fire.database().ref(`posts/entrepreneurs/${fire.auth().currentUser.uid}`).orderByValue().on('value',snapshot=>{\n            \n            if(snapshot.exists()){\n                let projectId = Object.values(snapshot.val());  \n                let newPosts = [];\n                let projectChildren = Object.values(projectId).forEach(childsnapshot =>{\n           \n                  \n                      newPosts.push({\n                          profileImage: childsnapshot.profileImage,\n                          username: childsnapshot.username,\n                          projectImage: childsnapshot.projectImage,\n                          projectId:childsnapshot.id,\n                          projectTitle: childsnapshot.projectTitle,\n                          projectStatus: childsnapshot.projectStatus,\n                          projectDescription: childsnapshot.projectDescription\n                      })\n                  \n                  setEntrepreneurPosts(entrepreneurPosts = newPosts);\n                });                \n            }\n        })\n       }\n\n\n    fire.database().ref(`users/entrepreneurInfo/${fire.auth().currentUser.uid}`).on('value', snapshot =>{\n        if(snapshot.exists()){\n            let Items = snapshot.val();\n            let newItems = [];\n            for(let x = 0; x< 1; x++){\n             \n                  newItems.push({\n                      username: Items.username,\n                      profileImage: Items.profileImage,\n                  });\n          \n            }\n            setEntrepreneurItems(entrepreneuritems= newItems);\n        }\n\n    });\n  \n   },[])\n   \n\n\n\n        return(\n            <div>\n                <div show={values.drawerOpen} className={values.drawerClasses} >\n                    <div className=\"profileView-TopSection\">\n                        <div className=\"profileView-back\">\n                        <h2 className=\"profileView-icon\" onClick={drawerCloser}>\n                        <FontAwesomeIcon icon={faArrowCircleLeft} size={70}/>\n                        </h2>\n                        </div>\n                        <div>\n                            <h1>Posts</h1>\n                        </div>\n                        <div className=\"profileView-body\">\n                            {entrepreneurPosts.map(item=>{\n\n                                return(\n                                    <div className=\"postsView\" key={item.projectId} >\n                                        \n                                        <img src={item.projectImage} className=\"postsView-image\" width={200} height={200} />\n           \n                                        <div className=\"PostsView-content\">\n                                            <FontAwesomeIcon icon={faTrash} size=\"2x\" style={{float: 'right',\n                                        padding:'5px'}} onClick={()=>deleteContent(item.projectId)}/>\n                                            <h4>{item.projectTitle}</h4><br/>\n                                            <h6>{item.projectStatus}</h6>\n                                            <p>{item.projectDescription}</p>\n\n                                        </div>\n                                    </div>\n\n                                )\n                            })}\n                        </div>\n                    </div>\n                </div>\n                \n                <div className=\"profile-content\">\n                   \n                    {items.map(item=>{\n                        return(\n                            <div>\n                                <img src={item.profileImage} alt=\"profile\"  className=\"profile-pic\"/>\n                                <h1>{item.username}</h1>\n                            </div>\n\n                        )\n                    })}\n                    <h7>{type}</h7><br/>\n        \n   \n                 \n\n\n                   <button className=\"profile-btn\">\n                       Followers\n                   </button>\n                   <button className=\"profile-btn\">\n                       Following\n                   </button>\n                   <button className=\"profile-btn\">\n                       <NavLink to='/chat'>\n                        Message\n                       </NavLink>\n  \n                   </button>\n                       {typeReader ?(\n                        <button className=\"profile-btn\" >\n                        <NavLink to ='/editprofile'>\n                            Edit Profile\n                        </NavLink>\n                     </button> \n                       ):(\n                        <button className=\"profile-btn\" >\n                            <NavLink to ='/iprofileEdit'>\n                                Edit Profile\n                            </NavLink>\n                         </button>  \n                       )\n                          \n                       }\n                </div>\n                <div className=\"profile-postsection\">\n                <div className=\"profileView-banner\">\n                    <div className=\"profileView-bannerIcon\"> <FontAwesomeIcon icon={faCogs} size=\"2x\"/></div>\n                    <div className=\"profileView-bannerTitle\"><h4>Projects</h4></div>\n                 </div>\n                    <div className=\"profileView-container\">\n                    \n                        {state  ? (\n                                \n                             <div>\n                                {entrepreneurPosts.map((item, index) =>{\n                            \n                                    return(\n                                         <img key={item.projectId} className=\"profileView-posts\" onClick={drawerToggleClickHandler} src={item.projectImage} />\n                                    )\n                            \n                                        \n                                })}\n                            </div>\n                                \n                                \n                        ):(\n                            <div>\n                             {entrepreneurPosts.map((item, index) =>{\n                            \n                                return(\n                                    <img key={item.projectId} className=\"profileView-posts\" onClick={drawerToggleClickHandler} src={item.projectImage} />\n                                )\n                    \n                                \n                        })}  \n                            </div>\n                        )\n                        \n                        }\n                    </div>\n                </div>\n                    \n            </div>\n        );\n        \n\n    \n \n    }\nexport default ProfileScreen;","import React, { useEffect, useState} from 'react';\nimport fire from './fire';\nimport validate from './validateInfo';\nimport useForm from './useForm';\n\n\n\n\nconst CreatePostScreen = ()=>{\n    //calls functions from UseForm page\n    const { handleChangeP, values} = useForm(\n\n        validate\n      );\n  // create constant variable to store images\n    const storage = fire.storage();\n    // create states\n    const [image,setImage] = useState(null);\n    var [urlf, setUrl]  = useState('');\n    var [items, setItems] = useState([]);\n\n    \n    const [projectKey, setProjectKey] = useState([]);\n\n    //handles file changes\n   const handleChange = e  =>{\n       if(e.target.files[0]){\n           setImage(e.target.files[0]);\n\n       }\n   }\n\n   //uploads data to the database.\n   const HandleUpload = () =>{\n\n    // stores image in the images directory\n    const UploadTask = storage.ref(`images/${image.name}`).put(image);\n    \n \n    UploadTask.on(\"state_changed\", snapshot =>{\n       \n    }, error =>{\n      //logs error\n        console.log(error )\n    },()=>{\n      //gets url of image\n        storage.ref(\"images\").child(image.name).getDownloadURL().then(url =>{\n            const current = fire.auth().currentUser;\n            const db = fire.database();\n            var newPostKey = Date.now();\n            setProjectKey(projectKey=>[...projectKey, newPostKey]);            \n            setUrl(urlf = url);\n            \n            \n    \n          if(current != null){\n            //stores information in database\n            db.ref(`posts/entrepreneurs/${current.uid}/${newPostKey}`).set({\n              id: newPostKey,\n              projectImage: urlf,\n              uid: current.uid,\n              projectTitle: values.projectTitle,\n              projectStatus: values.projectStatus,\n              projectDescription: values.projectDescription,\n              username: items[0].username,\n              profileImage: items[0].profileImage\n            }).then(()=>{\n              alert(\"Post successfully created\")\n            });\n\n            db.ref(`public/posts/${newPostKey}`).set({\n              id: newPostKey,\n              projectImage: urlf,\n              projectTitle: values.projectTitle,\n              projectStatus: values.projectStatus,\n              uid: current.uid,\n              projectDescription: values.projectDescription,\n              username: items[0].username,\n              profileImage: items[0].profileImage\n            })\n        \n\n          }\n        });\n        \n    })\n  \n   }\n\n   // listens for changes \n useEffect(()=>{\n   //retrieves data from database and stores it in a state\n  fire.database().ref(`users/entrepreneurInfo/${fire.auth().currentUser.uid}`).on('value', snapshot =>{\n    if(snapshot.exists()){\n      let Items = snapshot.val();\n      let newItems = [];\n      for(let x = 0; x< 1; x++){\n    \n      newItems.push({\n        username: Items.username,\n        profileImage: Items.profileImage,    \n     });\n    }\n    setItems(items = newItems);\n  }\n\n});\n },[])\n    \n    \n\n    return(\n        <div>\n            <div className=\"Post-main\">\n            <h1>Create Post</h1>\n            <img width={300} height={300} src={urlf} alt = \"post image\"className=\"post-imageholder\"/>\n              <div className=\"input-section\">\n              <input  type = \"file\" onChange = {handleChange}  className=\"file-btn\"/>\n                <br/>\n                <input \n                name = \"projectTitle\"\n                type = \"text\"\n                onChange ={handleChangeP} \n                value = {values.projectTitle}\n                className=\"post-input\"\n                placeholder = \"Enter Project Name\" />\n                <br/>\n                <input \n                name = \"projectStatus\"\n                type = \"text\"\n                onChange ={handleChangeP} \n                value = {values.projectStatus}\n                className=\"post-input\"\n                placeholder = \"Enter Project Status\" />\n                <br/>\n                <textarea\n                name = \"projectDescription\"\n                type = \"text\"\n                onChange ={handleChangeP} \n                value = {values.projectDescription}\n                className=\"post-textarea\"\n                placeholder = \"Enter Project Name\" />\n                <br/>\n                <button onClick={HandleUpload} className=\"post-btn\">Upload Post</button>\n              </div>\n\n            \n            </div>\n\n        </div>\n    );\n}\nexport default CreatePostScreen;","import React, { Component } from 'react';  \n\n\n\n\n\nclass Asker extends Component {\n\n\n\n\n    render() { \n\n\n\n       return( \n\n\n  <span>\n\n  <h1>FAQ</h1>\n <div class=\"accordion\">\n  <div>\n    <input type=\"radio\" name=\"example_accordion\" id=\"section1\" class=\"accordion__input\"></input>\n    <label for=\"section1\" class=\"accordion__label\"> Will confidentitial information be shared with other users ?</label>\n    <div class=\"accordion__content\">\n      \n      <p>\n        No, sensitive informatioon will only be accessible to the authorised personel\n      </p>\n    </div>\n  </div>\n\n  <div>\n    <input type=\"radio\" name=\"example_accordion\" id=\"section2\" class=\"accordion__input\"></input>\n    <label for=\"section2\" class=\"accordion__label\">How to register for your business</label>\n    <div class=\"accordion__content\">\n      <p>Follow the given link</p>\n      <p>\n      <a href=\" https://eservices.cipc.co.za/Search.aspx\">Click here</a>\n       \n      </p>\n    </div>\n  </div>\n  <div>\n    <input type=\"radio\" name=\"example_accordion\" id=\"section3\" class=\"accordion__input\"></input>\n    <label for=\"section3\" class=\"accordion__label\">Are you required to share banking details?</label>\n    <div class=\"accordion__content\">\n      <p>No</p>\n      <p>\n        Legally we are not inclined to request or prompt you to share any banking details as that will be going against our user agreement policy.\n      </p>\n    </div>\n  </div>\n</div>\n\n\n <h1>Suggested for you</h1>\n <div class=\"accordion\">\n  <div>\n    <input type=\"radio\" name=\"example_accordion\" id=\"section4\" class=\"accordion__input\"></input>\n    <label for=\"section4\" class=\"accordion__label\">Update Profile</label>\n    <div class=\"accordion__content\">\n      \n      <p>\n        Follow link to update your profile\n      </p>\n    </div>\n  </div>\n\n  <div>\n    <input type=\"radio\" name=\"example_accordion\" id=\"section5\" class=\"accordion__input\"></input>\n    <label for=\"section5\" class=\"accordion__label\">Forgot Password?</label>\n    <div class=\"accordion__content\">\n      <p>Reset Your Password</p>\n      <p>\n      \n       Resetting your password is easy. We'll email or text you a link to reset it via the email address or phone number you provided.\n      </p>\n    </div>\n  </div>\n  <div>\n    <input type=\"radio\" name=\"example_accordion\" id=\"section6\" class=\"accordion__input\"></input>\n    <label for=\"section6\" class=\"accordion__label\">No access to email address?</label>\n    <div class=\"accordion__content\">\n    \n      <p>\nThere are instances when you no longer use or have access to the email address used to register your LinkedIn account. We suggest first trying to sign in with a secondary email address or phone number that's associated with your account. We allow you to sign in with any email address or phone number associated with your account.      </p>\n    </div>\n  </div>\n</div>\n\n</span>\n    );\n  }\n}\n \nexport default Asker;","import React from 'react'\nimport { Link } from 'react-router-dom';\nconst HomeScreen =()=>{\n\n    return(\n        <div>\n            <div className=\"home-content\">\n                <div className=\"resources-section\">\n                <h1>Resources</h1>\n                    <div className=\"resources-content\">\n                    \n                        <p>Provides you with helpful information on the required documentation, finances, copyright and intellectual property. \n                            Furthermore, tools you need to succeed and also how to register your business\n                        </p>\n                        <p> To gain access to these resources click <Link to ='/resources'>here</Link></p>\n                    </div>\n                </div>\n                <div className=\"resources-section1\">\n                    <h1>Feed</h1>\n                    <div className=\"resources-content\">\n\n                        <p>\n                            See the projects and Start-Up strengths of all Entrepreneurs on this platform. \n                            To view projects and start-Ups click <Link to ='/feed'>here</Link>. \n\n                        </p>\n                    </div>\n                </div>\n                <div className=\"resources-section\">\n                    <h1>Opportunities</h1>\n                    <div className=\"resources-content\">\n\n                    <p>Business opportunities help entrepreneurs take their businesses to the \n                        next level. To gain access to opportunities click <Link to='/opportuinities'>here</Link>.\n                    </p>\n                    </div>\n                </div>\n                <div className=\"resources-section1\">\n                    <h1>My Business</h1>\n                    <div className=\"resources-content\">\n                        <p>\n                            This is a feature where we use machine learning to predict the strength of your start up based on a few metrices. \n                            If Your are ready to use this feature click <Link to='/mybusiness'>here</Link>.\n                        </p>\n\n                    </div>\n                </div>\n                <div className=\"resources-section\">\n                    <h1>Support</h1>\n                    <div className=\"resources-content\">\n\n                        <p>If you need any help navigating through the site, the support page is where\n                            you will find all the solutions to your problems. Feel free to go through \n                            our frequently asked questions during your spare time. To navigate to the support page \n                            click <Link to='/support'>here</Link>.\n                        </p>\n                    </div>\n                </div>\n                <div className=\"resources-section1\">\n                    <h1>Profile</h1>\n                    <div className=\"resources-content\">\n                        <p>\n                            Share information about yourself, your projects and everything that represents you and \n                            your organisation. To navigate to the profile page click <Link to='/'profile>here</Link>.\n                        </p>\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\nexport default HomeScreen","import React,{ useEffect, useState} from 'react';\nimport Chart from 'react-google-charts';\nimport fire from './fire';\nimport ml5 from 'ml5';\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome';\nimport {faArrowCircleLeft} from '@fortawesome/free-solid-svg-icons'\n\nconst MyBusinessScreen = ()=>{\n\n    const [values, setValues] = useState({\n        numberofEmployees:'',\n        numberofMilestones: '',\n        managementExperience: '',\n        TotalcapitalAmount: '',\n        financialBackground:'',\n        relationships:'',\n        numberOfCompetitors:'',\n        open: false,\n    })\n    var [drawerOpen, setDrawerOpen] = useState(false);\n    var [drawerClasses, setDrawerClasses] = useState('side-drawer');\n    var [datas, setDatas] = useState([]);\n    var [results, setResults] = useState([]);\n    var [items, setItems] = useState([]);\n    const [tag, setTag] = useState([]);\n    const [datapoints, setDatapoints] = useState([]);\n    var [charts, setCharts] = useState([]);\n    var [sectorOfBusiness,setSectorOfBusiness] = useState([]);\n    function handleChange(event){\n       \n        const { name, value } = event.target;\n        setValues({\n          ...values,\n          [name]: value\n        })\n    }\n   function initializeBrain(){\n       backdropClickHandler();\n\n       // data used to train the machine.\n         var data = [\n            { numberofEmployees:\"150\", numberofMilestones:\"10\", managementExperience:\"10\", TotalcapitalAmount:\"500000\", financialBackground:\"yes\", relationships:\"10\", numberOfCompetitors:\"1\", label:'Startup success'},\n            { numberofEmployees:\"140\", numberofMilestones:\"9\", managementExperience:\"9\", TotalcapitalAmount:\"450000\", financialBackground:\"yes\", relationships:\"9\", numberOfCompetitors:\"2\", label:'Startup success'},\n            { numberofEmployees:\"130\", numberofMilestones:\"8\", managementExperience:\"8\", TotalcapitalAmount:\"400000\", financialBackground:\"yes\", relationships:\"8\", numberOfCompetitors:\"3\", label:'Startup success'},\n            { numberofEmployees:\"120\", numberofMilestones:\"7\", managementExperience:\"7\", TotalcapitalAmount:\"350000\", financialBackground:\"yes\", relationships:\"7\", numberOfCompetitors:\"4\", label:'Startup success'},\n            { numberofEmployees:\"110\", numberofMilestones:\"6\", managementExperience:\"6\", TotalcapitalAmount:\"300000\", financialBackground:\"yes\", relationships:\"6\", numberOfCompetitors:\"5\", label:'Startup success'},\n            { numberofEmployees:\"100\", numberofMilestones:\"5\", managementExperience:\"5\", TotalcapitalAmount:\"250000\", financialBackground:\"yes\", relationships:\"5\", numberOfCompetitors:\"6\", label:'Startup moderate'},\n            { numberofEmployees:\"90\", numberofMilestones:\"5\", managementExperience:\"4\", TotalcapitalAmount:\"200000\", financialBackground:\"yes\", relationships:\"4\", numberOfCompetitors:\"7\", label:'Startup moderate'},\n            { numberofEmployees:\"80\", numberofMilestones:\"5\", managementExperience:\"3\", TotalcapitalAmount:\"150000\", financialBackground:\"yes\", relationships:\"3\", numberOfCompetitors:\"8\", label:'Startup moderate'},\n            { numberofEmployees:\"70\", numberofMilestones:\"5\", managementExperience:\"2\", TotalcapitalAmount:\"100000\", financialBackground:\"yes\", relationships:\"3\", numberOfCompetitors:\"9\", label:'Startup moderate'},\n            { numberofEmployees:\"40\", numberofMilestones:\"5\", managementExperience:\"2\", TotalcapitalAmount:\"95000\", financialBackground:\"yes\", relationships:\"3\", numberOfCompetitors:\"10\", label:'Startup moderate'},\n            { numberofEmployees:\"30\", numberofMilestones:\"4\", managementExperience:\"1\", TotalcapitalAmount:\"90000\", financialBackground:\"no\", relationships:\"2\", numberOfCompetitors:\"11\", label:'Startup at risk'},\n            { numberofEmployees:\"20\", numberofMilestones:\"3\", managementExperience:\"1\", TotalcapitalAmount:\"85000\", financialBackground:\"no\", relationships:\"1\", numberOfCompetitors:\"11\", label:'Startup at risk'},\n            { numberofEmployees:\"15\", numberofMilestones:\"2\", managementExperience:\"1\", TotalcapitalAmount:\"80000\", financialBackground:\"no\", relationships:\"1\", numberOfCompetitors:\"11\", label:'Startup at risk'},\n            { numberofEmployees:\"10\", numberofMilestones:\"1\", managementExperience:\"0\", TotalcapitalAmount:\"75000\", financialBackground:\"no\", relationships:\"1\", numberOfCompetitors:\"11\", label:'Startup at risk'},\n            { numberofEmployees:\"9\", numberofMilestones:\"0\", managementExperience:\"0\", TotalcapitalAmount:\"70000\", financialBackground:\"no\", relationships:\"0\", numberOfCompetitors:\"11\", label:'Startup at risk'},\n            { numberofEmployees:\"8\", numberofMilestones:\"0\", managementExperience:\"0\", TotalcapitalAmount:\"65000\", financialBackground:\"no\", relationships:\"0\", numberOfCompetitors:\"11\", label:'Startup at risk'},\n\n          ];\n\n          // machine options\n        const options ={\n            task: 'classification',\n            debug: true\n          };\n          // create new neural network\n         const model = ml5.neuralNetwork(options);\n\n         //loop true data and store into inputs constant.\n        data.forEach(item => {\n             const inputs = {\n              numberofEmployees: item.numberofEmployees, \n              numberofMilestones: item.numberofMilestones,\n              managementExperience:item.managementExperience,\n              TotalcapitalAmount: item.TotalcapitalAmount,\n              financialBackground: item.financialBackground,\n              relationships: item.relationships,\n              numberOfCompetitors: item.numberOfCompetitors,\n            };\n            // the output would be the label\n             const output = {\n              label: item.label\n            };\n          \n            //add data to the neural network\n             model.addData( inputs,  output);\n          });\n\n          // normalize your data;\n        model.normalizeData();\n            const trainingOptions = {\n                epochs: 100,\n                batchSize: 50,\n                }\n                \n        \n                // use the trained model\n                function finishedTraining(){\n                classify();\n                };\n\n            model.train(trainingOptions, finishedTraining);\n\n            console.log(\"training model was clicked\");\n\n            function classify(){\n                \n               // user input is mapped and stored into input2\n                datas.map(item =>{\n                 const input2 = {\n                    numberofEmployees: item.numberofEmployees, \n                    numberofMilestones: item.numberofMilestones,\n                    managementExperience:item.managementExperience,\n                    TotalcapitalAmount: item.TotalcapitalAmount,\n                    financialBackground: item.financialBackground,\n                    relationships: item.relationships,\n                    numberOfCompetitors: item.numberOfCompetitors,\n                 }\n                    // classifies the input\n                    model.classify(input2, handleResults);\n                })\n                \n                }\n        \n                //  define a function to handle the results of your classification\n                function handleResults(error, result) {\n                    if(error){\n                    console.error(error);\n                    return;\n                    }\n                \n                    setResults(results = result);\n                    const db = fire.database();\n                    const current = fire.auth().currentUser;\n\n                    // stores results in the backend \n                    db.ref(`charts/${current.uid}`).set({\n                        tag1: results[0].label,\n                        tag2: results[1].label,\n                        tag3: results[2].label,\n                        point1: results[0].confidence,\n                        point2: results[1].confidence,\n                        point3: results[2].confidence,\n                        sectorOfBusiness: sectorOfBusiness[0].sectorOfBusiness,\n                    });\n                }        \n    }\n  \n    // stores data in database\n   function handleSave(){\n        const db = fire.database();\n        const current = fire.auth().currentUser;\n    \n        //stores user input in database\n        db.ref(`users/entrepreneur/${current.uid}`).set({\n            id: current.uid,\n            numberofEmployees: values.numberofEmployees,\n            numberofMilestones: values.numberofMilestones,\n            managementExperience: values.managementExperience,\n            relationships: values.relationships,\n            TotalcapitalAmount: values.TotalcapitalAmount,\n            financialBackground: values.financialBackground,\n            numberOfCompetitors: values.numberOfCompetitors,\n            sectorOfBusiness: values.sectorOfBusiness,\n\n        }).then(()=>{\n            alert(\"Saved!\");\n        })\n\n        db.ref(`users/mybusiness/${current.uid}`).set({\n            id: current.uid,\n            numberofEmployees: values.numberofEmployees,\n            numberofMilestones: values.numberofMilestones,\n            managementExperience: values.managementExperience,\n            relationships: values.relationships,\n            TotalcapitalAmount: values.TotalcapitalAmount,\n            financialBackground: values.financialBackground,\n            numberOfCompetitors: values.numberOfCompetitors,\n        })\n\n          \n\n            \n           \n\n    }\n\n useEffect(()=>{\n\n    const db = fire.database();\n    const current = fire.auth().currentUser;\n    db.ref(`users/entrepreneur/${current.uid}`).on('value',snapshot=>{\n        let Items = snapshot.val();\n      let newItems = [];\n      for(let x = 0; x< 1; x++){\n       \n            newItems.push({\n                \n               \n                numberofEmployees: Items.numberofEmployees,\n                numberofMilestones: Items.numberofMilestones,\n                managementExperience: Items.managementExperience,\n                relationships: Items.relationships,\n                TotalcapitalAmount: Items.TotalcapitalAmount,\n                financialBackground: Items.financialBackground,\n                numberOfCompetitors: Items.numberOfCompetitors,\n            });\n    \n      }\n      setDatas(datas = newItems);\n     \n      console.log(datas);\n\n    });\n\n    fire.database().ref(`users/entrepreneurInfo/${fire.auth().currentUser.uid}`).on('value', snapshot =>{\n        console.log(snapshot.val());\n        let Items = snapshot.val();\n       let newItems = [];\n       for(let x = 0; x< 1; x++){\n        \n             newItems.push({\n                 companyName: Items.companyName,\n                 companyDescription: Items.companyDescription\n                \n             });\n     \n       }\n\n\n        setItems(items = newItems);\n        console.log(items);\n    });\n   \n\n    db.ref(`charts/${current.uid}`).on('value', snapshot=>{\n        console.log(snapshot.val());\n        let chartpoints = snapshot.val();\n        let newpoints = [];\n        for(let x = 0; x < 1; x++){\n            newpoints.push({\n\n                tag1: chartpoints.tag1,\n                tag2: chartpoints.tag2,\n                tag3: chartpoints.tag3,\n                point1: chartpoints.point1,\n                point2: chartpoints.point2,\n                point3: chartpoints.point3\n\n            })\n        }\n        setCharts(charts = newpoints);\n\n        console.log(charts);\n        const labels = [];\n        const pointers = [];\n    \n    \n            labels.push(charts[0].tag1,charts[0].tag2, charts[0].tag3);\n            pointers.push(charts[0].point1, charts[0].point2, charts[0].point3);\n            setTag(labels);\n            setDatapoints(pointers);\n            \n            console.log(tag);\n            console.log(datapoints);\n\n\n    });\n    console.log(charts);\n    db.ref(`users/entrepreneur/${current.uid}`).on('value', snapshot=>{\n        let items = snapshot.val();\n        let newItems = [];\n        newItems.push({\n            sectorOfBusiness: items.sectorOfBusiness,\n        })\n        setSectorOfBusiness(sectorOfBusiness = newItems);\n    })\n    console.log(sectorOfBusiness);\n\n },[]);\n\n\n\n const drawerToggleClickHandler = () => {\n     setDrawerOpen(drawerOpen = !drawerOpen);\n     setDrawerClasses(drawerClasses = 'side-drawer open');\n }\n\n function backdropClickHandler(){\n    setDrawerOpen(drawerOpen = false);\n    setDrawerClasses(drawerClasses = 'side-drawer');\n}\n\n        return(\n\n            <div >\n\n        <div show ={drawerOpen} className={drawerClasses}>\n            <div className=\"profileView-TopSection\">\n                <div className=\"profileView-back\">\n                    <h2 className=\"profileView-icon\" onClick={backdropClickHandler}>\n                    <FontAwesomeIcon icon={faArrowCircleLeft} size={70}/>\n                    </h2>\n                </div>\n            </div>\n\n        <div className=\"business-cards\">\n            <h1>How many people does your organisation employ?</h1>\n                <input \n                    type='text' \n                    name=\"numberofEmployees\" \n                    className=\"business-input\"\n                    value={values.numberofEmployees}\n                    onChange={handleChange}\n                />                                       \n        </div>\n        <div className=\"business-cards\">\n            <h1>Number of Milestones?</h1>\n            <input \n                type='text' \n                name=\"numberofMilestones\" \n                className=\"business-input\"\n                value={values.numberofMilestones}\n                onChange={handleChange}\n            />                  \n        </div>\n        <div className=\"business-cards\">\n            <h1>Amount of management Experience?</h1>\n            <input \n                type='text' \n                name=\"managementExperience\" \n                className=\"business-input\"\n                value={values.managementExperience}\n                onChange={handleChange}\n            />\n        </div>\n        <div className=\"business-cards\">\n            <h1>Total Capital amount?</h1>\n            <input type='text' \n            name=\"TotalcapitalAmount\" \n            className=\"business-input\"\n            value={values.TotalcapitalAmount}\n            onChange={handleChange}\n            />\n        </div>\n        <div className=\"business-cards\">\n            <h1>Financial Background?</h1>\n            <input type='text' \n                    name=\"financialBackground\" \n                    className=\"business-input\"\n                    value={values.financialBackground}\n                    onChange={handleChange}\n            />\n        </div>\n        <div className=\"business-cards\">\n            <h1>Number of Competitors?</h1>\n            <input type='text' \n                    name=\"numberOfCompetitors\" \n                    className=\"business-input\"\n                    value={values.numberOfCompetitors}\n                    onChange={handleChange}\n            />                            \n        </div>\n        <div className=\"business-cards\">\n            <h1>How many relationships have you formed within your industry?</h1>\n            <input \n                type='text' \n                name=\"relationships\" \n                className=\"business-input\"\n                value={values.relationships}\n                onChange={handleChange}\n                />\n        </div>\n        <div className=\"business-cards\">\n            <h1>Which sector is your organisation in?</h1>\n            <select\n                type='text' \n                name=\"sectorOfBusiness\" \n                className=\"business-input\"\n                value={values.sectorOfBusiness}\n                onChange={handleChange}\n                >\n                <option value = ''></option>\n                <option value = 'tourism'> Tourism</option>\n                <option value = 'business'>Finances and Business</option>\n                <option value = 'manufacturing'>Manufacturing</option>\n            </select><br/>\n            <input type=\"submit\" focus value=\"Save Answers\" onClick={handleSave} className=\"business-btn\" />  \n            <input type=\"submit\" focus value=\"Generate Report\" onClick={initializeBrain} className=\"business-btn\" />\n\n        </div>\n        <div className=\"business-lastcards\">\n\n        </div>\n    \n        </div>  \n        \n                <div className=\"business-chart\" toggle={drawerToggleClickHandler}>\n                    <Chart\n                        chartType=\"PieChart\"\n                        width={400}\n                        height={400}\n                        data={[[\"labels\",\"percentages\"],\n                            [tag[0],datapoints[0]],\n                            [tag[1], datapoints[1]],\n                            [tag[2], datapoints[2]]\n                        ]}\n                          options={{title: 'Overview of Business'}}\n                    />\n                </div>\n               <div className=\"business-content\">\n                  <h1>Welcome to My Business</h1>\n                   <p>My Business is a feature where we use machine learning to predict the \n                       success of your start up and the measures one should take when your start Up \n                       is in danger\n                   </p>\n                   <input type=\"submit\" value=\"Generate Report\" onClick={drawerToggleClickHandler} className=\"terms-btn\"/>\n                   \n               </div>\n               <div className=\"company-content\">\n                   {items.map(item=>{\n                       return(\n                        <div>\n                            <h1>{item.companyName} </h1>\n                            <p>{item.companyDescription}</p>\n                        </div>\n\n                       )\n                   })}\n\n\n               </div>\n            </div>\n        )\n}\nexport default MyBusinessScreen;","import React,{Component} from 'react';\nimport { Link } from 'react-router-dom';\n\n\nclass ResourceScreen extends Component{\n\n    render(){\n        return(\n            <div>\n                <button className=\"resource-categories\">\n                    <Link to='/finances'>\n                        Finances \n                    </Link>\n                </button>\n                <button className=\"resource-categories\">\n                   Required Documentation\n                </button>\n                <button className=\"resource-categories\">\n                    Tools for Success\n                </button>\n                <button className=\"resource-categories\">\n                    Copyright and Intellectual Property\n                </button>\n                <button className=\"resource-categories\">\n                    How to Register Your Business\n                </button>\n            </div>\n        )\n    }\n}\nexport default ResourceScreen;","import React,{Component} from 'react';\nimport fire from './fire';\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome';\nimport {faArrowCircleLeft, faArrowCircleRight} from '@fortawesome/free-solid-svg-icons'\n\nclass ProjectScreen extends Component{\n\n    constructor(props){\n        super(props);\n        // create states\n        this.state = {\n            Posts: [],\n            items: [],\n            Messages:[],\n            CurrentMessages:[],\n            search: '',\n            drawerOpen:false,\n            drawerClasses: 'side-drawer',\n            uid:'',\n            comment:'',\n            username:'',\n            profileImage:'',\n            message:'',\n            ChatID:'',\n            thisU: `${fire.auth().currentUser.uid}`\n\n        }\n        //bind this to functions\n        this.handleChange= this.handleChange.bind(this);\n        this.handleMessage= this.handleMessage.bind(this);\n    }\n    //handle changes to user input\n    handleChange(event){\n        this.setState({\n            [event.target.name]: event.target.value\n        })\n\n    }\n    // sends message to the database.\n    handleMessage(e,parsedUid){\n        const CurrentUid = fire.auth().currentUser.uid;\n            \n        let sessionId = CurrentUid + this.state.uid;\n        let alternateSessionId = this.state.uid + CurrentUid;\n\n         \n         \n        \n\n        var messageId = Date.now();\n        var today = new Date();\n        var time = today.getHours() + ':' + ((today.getMinutes() < 10 ? '0': '') + today.getMinutes());\n\n        fire.database().ref(`chats/users/${CurrentUid}/${sessionId}/${messageId}`).set({\n\n            messageId: messageId,\n            chatUid: sessionId,\n            message: this.state.message,\n            time: time,\n            uid: CurrentUid\n        });\n\n        fire.database().ref(`chats/${sessionId}/${messageId}`).set({\n            messageId: messageId,\n            chatUid: sessionId,\n            message: this.state.message,\n            time: time,\n            uid: CurrentUid\n        })\n        fire.database().ref(`chats/${alternateSessionId}/${messageId}`).set({\n            messageId: messageId,\n            chatUid: sessionId,\n            message: this.state.message,\n            time: time,\n            uid: CurrentUid\n        })\n       \n    }\n    // handles and opens first side drawer\n    drawerToggleClickHandler = (projectId) => {\n        this.setState({drawerOpen: !this.state.drawerOpen});\n        this.setState({drawerClasses: 'side-drawer open'});\n        this.setState({uid: projectId});\n    }\n    // closes side drawer\n    backdropClickHandler=()=>{\n        this.setState({drawerOpen: false});\n        this.setState({drawerClasses: 'side-drawer'});\n    }\n\n// listens for changes\ncomponentDidMount(){\n\n\n    const current = fire.auth().currentUser.uid;\n// retrieves posts from database\n fire.database().ref(`public/posts/`).on('value',snapshot=>{\n     if(snapshot.exists()){\n        let projectId = Object.values(snapshot.val());\n        let newPosts = [];\n        let projectChildren = Object.values(projectId).forEach(childsnapshot =>{\n   \n          \n              newPosts.push({\n                  projectImage: childsnapshot.projectImage,\n                  projectId:childsnapshot.id,\n                  projectTitle: childsnapshot.projectTitle,\n                  projectStatus: childsnapshot.projectStatus,\n                  projectDescription: childsnapshot.projectDescription,\n                  username: childsnapshot.username,\n                  profileImage: childsnapshot.profileImage,\n                  uid: childsnapshot.uid,\n              })\n          \n          this.setState({Posts: newPosts});\n           });       \n    }\n\n    // retrieves entrepreneur data from database\n     fire.database().ref(`users/entrepreneurInfo/${fire.auth().currentUser.uid}`).on('value', snapshot =>{\n        if(snapshot.exists()){\n            let Items = snapshot.val();\n            this.setState({\n                username: Items.username,\n                profileImage: Items.profileImage\n            });\n    \n           let newItems = [];\n           for(let x = 0; x< 1; x++){\n                newItems.push({\n                    username: Items.username,\n                    profileImage: Items.profileImage,\n                 });\n            } \n            this.setState({items: newItems});\n        }\n\n    });\n    \n    // retrieves chats from database\n    fire.database().ref(`chats/`).on('value', snapshot=>{\n        if(snapshot.exists()){\n            let sessionId = Object.keys(snapshot.val());\n            console.log(sessionId);\n            var extensionArray = [];\n     \n                let messageId = Object.values(sessionId).map(items=>{\n                    console.log(items);\n                    fire.database().ref(`chats/${items}/`).on('value', childshot=>{\n\n                        Object.values(childshot.val()).map(items=>{\n                            console.log(items.message);\n                            let messages = [];\n                            messages.push({\n                                chatUid: items.chatUid,\n                                message: items.message,\n                                time: items.time,\n                                messageId: items.messageId,\n                                uid: items.uid\n                            })\n                            extensionArray = [...extensionArray, messages];\n                            this.setState({Messages: extensionArray});\n                        })\n                   \n\n                    \n                \n                    })\n                });\n        }        \n\n    })\n    \n        \n \n\n  },[])\n    }\n    render(){\n        return(\n        <div>\n            <div show={this.state.drawerOpen}   className={this.state.drawerClasses}>\n                <div className=\"profileView-TopSection\">\n                    <div className=\"profileView-back\">\n                        <h2 className=\"profileView-icon\" onClick={this.backdropClickHandler}>\n                        <FontAwesomeIcon icon={faArrowCircleLeft} size={70}/>\n                        </h2>\n                    </div>\n                    <div>\n                        <h1>Message</h1>\n                    </div>\n                    <div>\n                        {this.state.Posts.map(items=>{\n                            if(items.uid === this.state.uid){\n\n                                return(\n                                    <div style={{overflow:'hidden'}}>\n                                    <div style={{display:'inline-block',borderBottom:'0.5px solid black',width:'100%'}}>\n                                        <img src={items.profileImage} alt=\"profile\" className=\"feed-profile\"/> \n                                        <h6 style={{color:'black'}}>{items.username}</h6>\n                                    </div>\n                                    <div >\n\n                                        </div>\n                                        <div className=\"message-container\">\n                                            {this.state.Messages.map(item=> item.map(text=>{\n                                                if(text.chatUid === (this.state.thisU + this.state.uid )){\n                                                    if(text.uid === this.state.thisU){\n                                                        return(\n                                                            <div className=\"messageReceiver\" key={this.state.thisU}>\n                                                                <div className=\"messageReceiverR\">\n                                                                    <p>\n                                                                        {text.message}\n                                                                        <h10\n                                                                        style={{float:'right',\n                                                                                paddingRight:'10px'    \n                                                                            }}\n                                                                        ><br/>\n                                                                            {text.time}\n                                                                        </h10>\n                                                                    \n                                                                    </p>\n                                                                </div>\n                                                            </div>\n                                                        )\n                                                    }\n                                                }else if(text.chatUid ===(this.state.uid + this.state.thisU)){\n                                                    if(text.uid === this.state.uid){\n                                                        return(\n                                                            <div className=\"messageSender\">\n                                                                <div className=\"messageReceiverS\">\n                                                                    <p>\n                                                                        {text.message}\n                                                                        <h10\n                                                                            style={{paddingLeft:'10px'}}\n                                                                        ><br/>\n                                                                            {text.time}\n                                                                        </h10>\n                                                                    </p>\n                                                                </div>\n                                                            </div>\n                                                        )\n                                                    }\n                                                }\n\n\n                                            \n                                    \n                                            }))}\n                                        </div>\n                                        <footer className=\"message-footer\">\n                                            <h5>\n                                            <input\n                                            id=\"message\"\n                                            className=\"message-input\"\n                                            autoComplete= \"off\"\n                                            type=\"text\"\n                                            name=\"message\"\n                                            placeholder=\"Type a message\"\n                                            onChange={this.handleChange}\n                                            value={this.state.value}\n\n                                            /> <h3 \n                                                    className=\"message-btn\"\n                                                    onClick={(e)=>this.handleMessage(e,this.state.uid)}\n                                                    ><FontAwesomeIcon \n                                                    icon={faArrowCircleRight} \n                                                    size=\"2x\" \n                                                    color=\"black\"\n                                                    \n                                                    />\n                                                </h3>\n                                            </h5>\n                                        </footer>\n                                    \n                                    </div>\n                                    \n                                )\n                            }\n                        })}\n                    </div>\n\n                </div>\n\n            </div>\n            <div className=\"feed-search\">\n                <input type=\"text\" \n                className=\"feed-input\" \n                placeholder=\"Search...\"\n                name = \"search\"\n                value = {this.state.search}\n                onChange={this.handleChange}\n                />\n            </div>\n            <div className=\"feed-gradient\">\n\n            </div>\n        <div className=\"feed-container\" >\n        {this.state.Posts.map((items, index) =>{\n\n            return(\n\n                    <div className=\"feed-content\" key={index} >\n                        {this.state.items.map(item=>{\n                            \n                            if(items.username.indexOf(this.state.search)> -1){\n                                return(\n                                    <div style={{display:'inline-block',}}>\n                                        <div className=\"feed-banner\">\n                                        <img src={items.profileImage} alt=\"profile\" className=\"feed-profile\"/> \n                                        <h6>{items.username}</h6>\n                                        </div>\n                                        <div style={{display:'inline-block',margin:0}}>\n                                        <img className=\"project-image\" src={items.projectImage} key={items.uid} /><br/>\n                                        <div style={{display:'inline-block'}} key={items.uid} >\n                                        <div>\n                                            <input type=\"submit\" value=\"Message\" onClick={()=>this.drawerToggleClickHandler(items.uid)} />\n                                        </div>\n                                        <h5 key={items.uid} >{items.projectTitle}</h5>\n                                        <h8 key={items.uid} >{items.projectStatus}</h8>\n                                        <p key={items.uid} >{items.projectDescription}</p>\n                                        </div>\n                                        </div>                           \n                                    </div>\n                                    \n                                )\n                            }\n\n                        })}\n\n                    </div>\n\n            \n            )\n        \n            \n        })}\n    \n        </div>\n    \n    \n    </div>\n        )\n    }\n}\nexport default ProjectScreen;","import React, {useState} from 'react';\nimport fire from './fire';\nimport validate from './validateInfo';\nimport useForm from './useForm';\n\n// the same as create posts page.\nconst EditProfileScreen = ()=>{\n\n\n    const { handleChangeP, values} = useForm(\n        validate\n      );\n    const storage = fire.storage();\n    const [image,setImage] = useState(null);\n    const [url, setUrl]  = useState('');\n\n    const handleChange = e  =>{\n        if(e.target.files[0]){\n            setImage(e.target.files[0]);\n \n        }\n    }\n\n    const HandleUpload = () =>{\n\n        const UploadTask = storage.ref(`images/${image.name}`).put(image);\n        \n     \n        UploadTask.on(\"state_changed\", snapshot =>{\n           \n        }, error =>{\n            console.log(error )\n        },()=>{\n            storage.ref(\"images\").child(image.name).getDownloadURL().then(url =>{\n                const current = fire.auth().currentUser;\n                const db = fire.database();\n                var newPostKey = Date.now();           \n                setUrl(url);\n                \n                \n        \n              if(current != null){\n            \n                db.ref(`users/entrepreneurInfo/${fire.auth().currentUser.uid}`).set({\n                  profileImage: url,\n                  username: values.username,\n                  companyName: values.companyName,\n                  companyDescription: values.companyDescription,\n                }).then(()=>{\n                  alert(\"Profile Updated\");\n                });\n            \n    \n              }\n              \n          \n    \n            })\n        })\n    \n       }\n    \n    return(\n        <div>\n            <div className=\"Post-main\">\n            <img width={300} src={url} height={300} alt = \"post image\"className=\"post-imageholder\"/>\n            <div className=\"edit-input-section\">\n            <input  type = \"file\" onChange = {handleChange}  className=\"file-btn\"/>\n                <input \n                    type=\"text\" \n                    name=\"username\"\n                    placeholder=\"please insert your full name\"\n                    onChange={handleChangeP}\n                    value={values.username}\n                    className=\"post-input\"\n                />\n                <input \n                    type=\"text\" \n                    name=\"companyName\"\n                    placeholder=\"please insert your full name\"\n                    onChange={handleChangeP}\n                    value={values.companyName}\n                    className=\"post-input\"\n                />\n{ /*               <select \n                    type=\"text\" \n                    name=\"sectorOfBusiness\"\n                    placeholder=\"please insert your full name\"\n                    onChange={handleChangeP}\n                    value={values.sectorOfBusiness}\n                    className=\"post-input\"\n                >\n                    <option value=''> </option>\n                    <option value=\"manufacturing\">Manufacturing</option>\n                    <option value=\"business\">Finance and Business</option>\n                    <option value=\"tourism\">Tourism</option>\n</select>*/}\n                <textarea\n                    name=\"companyDescription\"\n                    placeholder=\"Tell us a little bit about your business...\"\n                    onChange={handleChangeP}\n                    value = {values.companyDescription}\n                    className='post-textarea' \n                />\n                <button onClick={HandleUpload} className=\"post-btn\">Update Profile</button>\n            </div>\n            </div>\n        </div>\n    )\n}\nexport default EditProfileScreen;","import React, {useState} from 'react';\r\nimport './App.css';\r\nimport fire  from './fire';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport {faEnvelopeSquare, faUpload,faMapMarkerAlt,faPhoneSquareAlt} from '@fortawesome/free-solid-svg-icons';\r\n\r\n\r\n\r\n\r\nconst Contact = () => {\r\n\r\n   const [name, setName] = useState(\"\");\r\n   const [email,setEmail]=useState(\"\");\r\n   const [msg,setMsg]=useState(\"\");\r\n   const [loader,setLoader] = useState(false);\r\n  //submits information to database\r\n   const handleSubmit = (e)=> {\r\n     e.preventDefault();\r\n\r\n     setLoader(true);\r\n\r\n     fire.database().ref('feedback/').set({\r\n       name:name,\r\n       email:email,\r\n       msg:msg,\r\n     })\r\n\r\n     .then(()=>{\r\n       alert(\"Message has been sent\")\r\n       setLoader(false);\r\n     })\r\n     .catch(error=>{\r\n       alert(error.message);\r\n       setLoader(false);\r\n\r\n     });\r\n\r\n     setName('');\r\n     setEmail('');\r\n     setMsg('');\r\n   };\r\n   \r\n    return (\r\n     \r\n      \r\n\r\n      <span >\r\n\r\n<span class= \"faq\">\r\n\r\n  <h1>FAQ</h1>\r\n <div class=\"accordion\">\r\n  <div>\r\n    <input type=\"radio\" name=\"example_accordion\" id=\"section1\" class=\"accordion__input\"></input>\r\n    <label for=\"section1\" class=\"accordion__label\"> Will confidentitial information be shared with other users ?</label>\r\n    <div class=\"accordion__content\">\r\n      \r\n      <p>\r\n        No, sensitive information will only be accessible to the authorised personel\r\n      </p>\r\n    </div>\r\n  </div>\r\n\r\n  <div>\r\n    <input type=\"radio\" name=\"example_accordion\" id=\"section2\" class=\"accordion__input\"></input>\r\n    <label for=\"section2\" class=\"accordion__label\">How to register for your business</label>\r\n    <div class=\"accordion__content\">\r\n      <p>Follow the given link</p>\r\n      <p>\r\n      <a href=\" https://eservices.cipc.co.za/Search.aspx\">Click here</a>\r\n       \r\n      </p>\r\n    </div>\r\n  </div>\r\n  <div>\r\n    <input type=\"radio\" name=\"example_accordion\" id=\"section3\" class=\"accordion__input\"></input>\r\n    <label for=\"section3\" class=\"accordion__label\">Are you required to share banking details?</label>\r\n    <div class=\"accordion__content\">\r\n      <p>No</p>\r\n      <p>\r\n        Legally we are not inclined to request or prompt you to share any banking details as that will be going against our user agreement policy.\r\n      </p>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n\r\n <h1>Suggested for you</h1>\r\n <div class=\"accordion\">\r\n  <div>\r\n    <input type=\"radio\" name=\"example_accordion\" id=\"section4\" class=\"accordion__input\"></input>\r\n    <label for=\"section4\" class=\"accordion__label\">Update Profile</label>\r\n    <div class=\"accordion__content\">\r\n      \r\n      <p>\r\n        Follow link to update your profile\r\n      </p>\r\n    </div>\r\n  </div>\r\n\r\n  <div>\r\n    <input type=\"radio\" name=\"example_accordion\" id=\"section5\" class=\"accordion__input\"></input>\r\n    <label for=\"section5\" class=\"accordion__label\">Forgot Password?</label>\r\n    <div class=\"accordion__content\">\r\n      <p>Reset Your Password</p>\r\n      <p>\r\n      \r\n       Resetting your password is easy. We'll email or text you a link to reset it via the email address or phone number you provided.\r\n      </p>\r\n    </div>\r\n  </div>\r\n  <div>\r\n    <input type=\"radio\" name=\"example_accordion\" id=\"section6\" class=\"accordion__input\"></input>\r\n    <label for=\"section6\" class=\"accordion__label\">No access to email address?</label>\r\n    <div class=\"accordion__content\">\r\n    \r\n      <p>\r\nThere are instances when you no longer use or have access to the email address used to register your LinkedIn account. We suggest first trying to sign in with a secondary email address or phone number that's associated with your account. We allow you to sign in with any email address or phone number associated with your account.      </p>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n</span>\r\n\r\n  <div className =\"contactUs\">\r\n        <h1>Contact Us</h1>\r\n        <p>This is where information is displayed</p>\r\n      <div className=\"contactInfo\">\r\n        <div className=\"contact-section\">\r\n          <h3><FontAwesomeIcon icon={faMapMarkerAlt} size=\"2x\" className=\"fontawesome\"/> Address</h3>\r\n          <p>SVAI company address</p>\r\n        </div>\r\n        <div className=\"contact-section\">\r\n          <h3><FontAwesomeIcon icon={faPhoneSquareAlt} size=\"2x\" className=\"fontawesome\"/> Phone</h3>\r\n          <p>SVAI company address</p>\r\n        </div>\r\n        <div className=\"contact-section\">\r\n          <h3><FontAwesomeIcon icon={faEnvelopeSquare} size=\"2x\"className=\"fontawesome\" /> Email</h3>\r\n          <p>SVAI company address</p>\r\n        </div>\r\n      </div>\r\n\r\n      <div className =\"container\">\r\n          <div className=\"contactForm\" >\r\n          \r\n          <h2>Send Message</h2>\r\n        \r\n        \r\n          <input className=\"inputText\" required=\"required\" placeholder=\"Full Name\" value = {name} onChange={(e) => setName(e.target.value)}/>\r\n          \r\n          <input className=\"inputText\" required=\"required\" placeholder=\"Email\" value = {email} onChange={(e) => setEmail(e.target.value)}/>\r\n      \r\n          <textarea  required=\"required\" placeholder=\"Message...\" value = {msg} onChange={(e) => setMsg(e.target.value)}></textarea><br/>\r\n      \r\n        <button type=\"submit\"  onSubmit={handleSubmit} style={{background: loader ? \"#ccc\" : \"#fff\"}}><FontAwesomeIcon   icon={faUpload} size = \"2em\"/>Submit</button>\r\n      </div> \r\n\r\n      </div>\r\n     </div>\r\n      </span>\r\n\r\n      \r\n      \r\n    )\r\n}\r\n\r\nexport default Contact\r\n","import React from 'react';\nimport Navigation from './Navigation';\n\n\nconst financeScreen = ()=>{\n// displays finances information\n    return(\n        <div>\n            <div className=\"finances-content\">\n                <iframe\n                    className=\"finances-iframe\"\n                    src='https://www.youtube.com/embed/LBC16jhiwak'\n                    frameBorder=\"0\"\n                    allow=\"accelerometer: autoplay; clipboard-write; encrypted-media; gryscope; picture-in-picture\"\n                    allowFullScreen\n                    title='YouTube Video'\n                />\n                 <iframe\n                    className=\"finances-iframe\"\n                    src='https://www.youtube.com/embed/sd9yLmJ1Jfk'\n                    frameBorder=\"0\"\n                    allow=\"accelerometer: autoplay; clipboard-write; encrypted-media; gryscope; picture-in-picture\"\n                    allowFullScreen\n                    title='YouTube Video'\n                />\n                 <iframe\n                    className=\"finances-iframe\"\n                    src='https://www.youtube.com/embed/9qWZALyGSmg'\n                    frameBorder=\"0\"\n                    allow=\"accelerometer: autoplay; clipboard-write; encrypted-media; gryscope; picture-in-picture\"\n                    allowFullScreen\n                    title='YouTube Video'\n                />\n                <iframe\n                    className=\"finances-iframe\"\n                    src='https://www.youtube.com/embed/jwXlo9gy_k4'\n                    frameBorder=\"0\"\n                    allow=\"accelerometer: autoplay; clipboard-write; encrypted-media; gryscope; picture-in-picture\"\n                    allowFullScreen\n                    title='YouTube Video'\n                />\n                <iframe\n                    className=\"finances-iframe\"\n                    src='https://www.youtube.com/embed/pRATyVNbgXg'\n                    frameBorder=\"0\"\n                    allow=\"accelerometer: autoplay; clipboard-write; encrypted-media; gryscope; picture-in-picture\"\n                    allowFullScreen\n                    title='YouTube Video'\n                />\n\n              \n\n            </div>\n        </div>\n    )\n}\nexport default financeScreen;","import React from 'react';\n\nconst OpportunitiesScreen = ()=>{\n    return(\n        <div>\n            <div className=\"Opportunities-section\">\n\n                <div className=\"opportunities-content\">\n                    <h1>Opportunities</h1>\n                    <p>\n                        Opportunities are a time or a set of circumstances that makes it possible to do \n                        something. Furthermore, NILENET provides Entrepreneurs with the opportunity to gain access \n                        to markets by placing all the necessary information with links to government Tenders, and projects \n                        which parties with similar interests can come together and work on something that would be most beneficial \n                        to society and parties involved.\n                    </p>\n                    <p>\n                        Entrepreneurs can collaborate with each other 24/7, government Tenders however, does not have those benefits.\n                        To find out more about tenders visit the tender site.\n                    </p>\n                </div>\n                <div className=\"opportunities-links\">\n                    <button className=\"opportunities-categories\">\n                        <a href='/projects'>\n                            Collaborate on Projects\n                        </a>\n                    </button>\n                    <button className=\"opportunities-categories\">\n                        <a href='https://www.gov.za/tenders'>\n                            Visit Tender Site\n                        </a>\n                    </button>\n                </div>\n            </div>\n        </div>\n    )\n}\nexport default OpportunitiesScreen;","import React,{useState} from 'react';\nimport validate from './validateInfo';\nimport useForm from './useForm';\nimport fire from './fire'\n\nfunction InvestorProfileEditScreen(){\n    const { handleChangeP, values} = useForm(\n        validate\n      );\n    const storage = fire.storage();\n    const [image,setImage] = useState(null);\n    const [url, setUrl]  = useState('');\n\n    const handleChange = e  =>{\n        if(e.target.files[0]){\n            setImage(e.target.files[0]);\n \n        }\n    }\n\n    const HandleUpload = () =>{\n\n        const UploadTask = storage.ref(`images/${image.name}`).put(image);\n        \n     \n        UploadTask.on(\"state_changed\", snapshot =>{\n           \n        }, error =>{\n            console.log(error )\n        },()=>{\n            storage.ref(\"images\").child(image.name).getDownloadURL().then(url =>{\n                const current = fire.auth().currentUser;\n                const db = fire.database();\n                var newPostKey = Date.now();           \n                setUrl(url);\n                \n                \n        \n              if(current != null){\n            \n                db.ref(`users/investorInfo/${fire.auth().currentUser.uid}`).set({\n                  profileImage: url,\n                  username: values.username,\n                  companyName: values.companyName,\n                  companyDescription: values.companyDescription,\n                  sectorOfBusiness: values.sectorOfBusiness\n                }).then(()=>{\n                  alert(\"Profile Updated\");\n                });\n            \n    \n              }\n              \n          \n    \n            })\n        })\n    \n       }\n    \n  \n    return(\n        <div>\n        <div className=\"Post-main\">\n        <img width={300} src={url} height={300} alt = \"post image\"className=\"post-imageholder\"/>\n        <div className=\"edit-input-section\">\n        <input  type = \"file\" onChange = {handleChange}  className=\"file-btn\"/>\n            <input \n                type=\"text\" \n                name=\"username\"\n                placeholder=\"please insert your full name\"\n                onChange={handleChangeP}\n                value={values.username}\n                className=\"post-input\"\n            />\n            <input \n                type=\"text\" \n                name=\"companyName\"\n                placeholder=\"please insert your full name\"\n                onChange={handleChangeP}\n                value={values.companyName}\n                className=\"post-input\"\n            />\n           <select \n                type=\"text\" \n                name=\"sectorOfBusiness\"\n                placeholder=\"please insert your full name\"\n                onChange={handleChangeP}\n                value={values.sectorOfBusiness}\n                className=\"post-input\"\n            >\n                <option value=''> </option>\n                <option value=\"manufacturing\">Manufacturing</option>\n                <option value=\"business\">Finance and Business</option>\n                <option value=\"tourism\">Tourism</option>\n            </select>\n            <textarea\n                name=\"companyDescription\"\n                placeholder=\"Tell us a little bit about your business...\"\n                onChange={handleChangeP}\n                value = {values.companyDescription}\n                className='post-textarea' \n            />\n            <button onClick={HandleUpload} className=\"post-btn\">Update Profile</button>\n        </div>\n        </div>\n    </div>\n    )\n}\nexport default InvestorProfileEditScreen;","import React,{Component} from 'react';\nimport fire from './fire';\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome';\nimport {faArrowCircleRight,faArrowCircleLeft, faCogs} from '@fortawesome/free-solid-svg-icons';\n\n\n\n\nclass ChatScreen extends Component{\n\n    constructor(props){\n        super(props);\n// create states to store data from the database.\n        this.state = {\n\n            contacts:[],\n            conversationkey:'',\n            alternateConversationkey:'',\n            messages: [],\n            key: '',\n            message:'',\n            thisU: `${fire.auth().currentUser.uid}`,\n            search:'',\n            drawerOpen:false,\n            drawerClasses: 'side-drawer',\n            drawerOpen1: false,\n            drawerClasses1: 'side-drawer-posts',\n            ProjectPosts: [],\n            users:[],\n            status:'Follow',\n        }\n\n        this.handleSession = this.handleSession.bind(this);\n        this.handleMessage = this.handleMessage.bind(this);\n        this.handleChange = this.handleChange.bind(this);\n    }\n\n    componentDidMount(){\n\n\n        // retrieves profile information from database.\n        fire.database().ref(`contacts/${fire.auth().currentUser.uid}`).on('value', snapshot=>{\n            \n            if(snapshot.exists()){\n\n                var extensionArray = [];\n                \n                Object.values(snapshot.val()).forEach(item=>{\n                    let contactItems = [];\n\n                    contactItems.push({\n                        profileImage: item.profileImage,\n                        uid: item.uid,\n                        username: item.username,\n                    });\n                        extensionArray = [...extensionArray, contactItems]\n                    this.setState({contacts: extensionArray});\n                    console.log(this.state.contacts);\n                })\n            }\n        })\n\n        //retrieves chats from database.\n        fire.database().ref(`chats/`).on('value', snapshot=>{\n        \n            if(snapshot.exists()){\n                let sessionId = Object.keys(snapshot.val());\n                console.log(sessionId);\n                var extensionArray = [];\n            \n                    let messageId = Object.values(sessionId).map(items=>{\n                        console.log(items);\n                        fire.database().ref(`chats/${items}/`).on('value', childshot=>{\n            \n                            Object.values(childshot.val()).map(items=>{\n        \n                                let messages = [];\n                                messages.push({\n                                    chatUid: items.chatUid,\n                                    message: items.message,\n                                    time: items.time,\n                                    messageId: items.messageId,\n                                    uid: items.uid\n                                })\n                                extensionArray = [...extensionArray, messages];\n                                this.setState({messages: extensionArray});\n                            })\n                       \n            \n                        \n                    \n                        })\n                    });\n            }\n        })\n\n            // retrieves posts from database and stores it in a state\n    fire.database().ref(`posts/entrepreneurs/${this.state.key}`).on('value', snapshot=>{\n        if(snapshot.exists()){\n          let postValues = snapshot.val();\n          let postKeys = Object.keys(postValues);\n      \n          var extensionArray = [];\n            let newItems = [];\n          for(let x = 0; x < postKeys.length; x++){\n            var keys = postKeys[x];\n    \n            var parentkey = Object.values(postValues[keys]);\n      \n            parentkey.map(item=>{\n                newItems.push({\n                  profileImage: item.profileImage,\n                  username: item.username,\n                  projectImage: item.projectImage,\n                  projectId:item.id,\n                  uid: item.uid,\n                  projectTitle: item.projectTitle,\n                  projectStatus: item.projectStatus,\n                  projectDescription: item.projectDescription\n                })\n                extensionArray = [...extensionArray, newItems];\n                this.setState({ProjectPosts: newItems});\n            })\n          }\n        }\n  \n      });\n      //retrieves entrepreneur Information and then stores it into a state.\n  fire.database().ref(`users/entrepreneurInfo`).on('value', snapshot =>{\n    \n    if(snapshot.exists()){\n        let userInfo = snapshot.val();\n        let userKeys = Object.keys(userInfo);\n        let extensionArray = [];\n      for(let x = 0; x< userKeys.length; x++){\n        \n        var key = userKeys[x];\n        var array = [userInfo[key]];\n        array.map(item=>{\n          let newItems=[];\n          newItems.push({\n            id:userKeys[x],\n            profileImage: item.profileImage,\n            username: item.username,\n            companyName: item.companyName\n          })\n          extensionArray = [...extensionArray, newItems];\n          this.setState({users:extensionArray});\n        })\n            \n    \n      }    \n    }\n  });\n\n  \n}\n\n    // displays user specific chats.\n    handleSession(id){\n        const current = fire.auth().currentUser.uid;\n\n        this.setState({key: id});\n        console.log(this.state.key);\n\n        var key = current + id;\n        var altKey = id + current;\n        this.setState({conversationkey: key});\n        this.setState({alternateConversationkey: altKey});\n\n        console.log(this.state.conversationkey)\n        console.log(\"clicked\");\n\n\n\n    }\n    //handles input from text box and stores into appropriate state variable.\n    handleChange(event){\n        this.setState({\n            [event.target.name]: event.target.value\n        })\n      \n      }\n\n\n      //handles the message functionality.\n    handleMessage(){\n        const CurrentUid = fire.auth().currentUser.uid;\n            \n      \n         \n        let sessionId = CurrentUid + this.state.key;\n        let alternateSessionId = this.state.key + CurrentUid;\n        \n      \n        var messageId = Date.now();\n        var today = new Date();\n        var time = today.getHours() + ':' + ((today.getMinutes() < 10 ? '0': '') + today.getMinutes());\n\n        //stores message in database\n        fire.database().ref(`chats/${sessionId}/${messageId}`).set({\n            messageId: messageId,\n            chatUid: sessionId,\n            message: this.state.message,\n            time: time,\n            uid: CurrentUid\n        })\n\n        //stores message in alternate database.\n        fire.database().ref(`chats/${alternateSessionId}/${messageId}`).set({\n            messageId: messageId,\n            chatUid: sessionId,\n            message: this.state.message,\n            time: time,\n            uid: CurrentUid\n        })\n      \n    }\n    //opens a side drawer where user information can be viewed.\n    drawerToggleClickHandler = (userid) => {\n    this.setState({drawerOpen: !this.state.drawerOpen});\n    this.setState({drawerClasses:'side-drawer open'});\n    this.setState({key:userid});\n  }\n//closes information viewer side drawer\ndrawerCloser = ()=>{\n    this.setState({drawerOpen:false});\n    this.setState({drawerClasses:'side-drawer'});\n  }\n  //handles follow functionality\nhandleFollow(uid,username,profileImage){\n  \n    if(this.state.status === 'Follow'){\n  \n      // stores follower in the contacts section of database of the current user\n      fire.database().ref(`contacts/${fire.auth().currentUser.uid}/${this.state.key}`).set({\n        uid: uid,\n        username: username,\n        profileImage: profileImage,\n      }).then(this.setState({status: 'Following'}));\n    }\n  \n  \n    if(this.state.status === 'Following'){\n      // if the user unfollows their information is removed from the database.\n      fire.database().ref(`contacts/${fire.auth().currentUser.uid}/${this.state.key}`).remove().then(this.setState({status: 'Follow'}))\n    }\n  }\n\n  //opens a side drawer where user posts can be viewed.\ndrawerToggleClickHandler1 = (uid) => {\n    this.setState({postkey: uid})\n    this.setState({drawerOpen:false});\n    this.setState({drawerClasses:'side-drawer'});\n    this.setState({drawerOpen1: !this.state.drawerOpen1});\n    this.setState({drawerClasses1:'side-drawer-posts open'});\n  \n  \n  \n  }\n  //closes posts side drawer.\ndrawerCloser1 = ()=>{\n    this.setState({drawerOpen1:false});\n    this.setState({drawerClasses1:'side-drawer-posts'});\n  }\n    render(){\n        return(\n            <div>\n                 <div show={this.state.drawerOpen1} className={this.state.drawerClasses1} >\n                    <div className=\"profileView-TopSection\">\n          <div className=\"profileView-back\">\n            <h2 className=\"profileView-icon\" onClick={this.drawerCloser1}>\n              <FontAwesomeIcon icon={faArrowCircleLeft} size={70}/>\n            </h2>\n          </div>\n          <div>\n            <h1>Posts</h1>\n          </div>\n          <div className=\"profileView-body\">\n          {//displays posts to the Front End.\n            this.state.ProjectPosts.map(item=>{\n              if(this.state.postkey === item.uid){\n                return(\n                  <div className=\"postsView\" key={item.projectId} >                    \n                    <img src={item.projectImage} \n                      className=\"postsView-image\" \n                      width={200} \n                      height={200} \n                    />\n                    <div className=\"PostsView-content\">\n                      <h4>{item.projectTitle}</h4><br/>\n                      <h6>{item.projectStatus}</h6>\n                      <p>{item.projectDescription}</p>\n                    </div>\n                  </div>\n                )\n              }\n          })}\n        </div>\n      </div>\n    </div>\n    <div show={this.state.drawerOpen}  className={this.state.drawerClasses}>\n      <div className=\"profile-content\">\n\n      {this.state.users.map(user=>user.map(variable=>{\n        for(let x = 0; x < this.state.users.length; x++){\n          var key = this.state.users[x];\n          console.log(key);\n          while(variable.id == this.state.key){\n            return(\n              <div>\n                <div className=\"profileView-TopSection\">\n                <div className=\"profileView-back\">\n                  <h2 className=\"profileView-icon\" onClick={this.drawerCloser}>\n                    <FontAwesomeIcon icon={faArrowCircleLeft} size={70}/>\n                  </h2>\n                </div>\n                <div>\n                  <h1>{variable.companyName}</h1>\n                </div>\n                </div>\n\n                <div className=\"profileView-body\">\n                  <img src={variable.profileImage} alt=\"profile\" key={variable.id} className=\"profile-pic\"/>\n                  <h1>{variable.username}</h1>\n                  <div className=\"profileView-followerSection\">\n                  <button className=\"profile-btn\" onClick={()=>this.handleFollow(variable.id, variable.username,variable.profileImage)}>\n                    {this.state.status}\n                  </button>\n                  </div>\n                  <div className=\"profileView-postSection\">\n\n                      <div className=\"profileView-banner\">\n                        <div className=\"profileView-bannerIcon\"> <FontAwesomeIcon icon={faCogs} size=\"2x\"/></div>\n                        <div className=\"profileView-bannerTitle\"><h4>Projects</h4></div>\n                      </div>\n                      <div className=\"profileView-container\">\n                      {this.state.ProjectPosts.map(post=>{\n                        if(variable.id === post.uid){\n                          return(\n                        \n                            <img className=\"profileView-posts\" src={post.projectImage} onClick={()=>this.drawerToggleClickHandler1(post.uid)}/>  \n                          ) \n                        }\n                                              \n                      })}\n                     </div>\n                  </div>\n                </div>\n              </div>\n            )            \n          }\n        }\n\n    }))}\n      </div>\n      </div>\n                <div className=\"contacts-section\">\n                    <div className=\"contacts-banner\">\n                        <h1> Contacts</h1>\n                        <div>\n                            <input \n                            type=\"text\"\n                            name=\"search\"\n                            className=\"chat-search\"\n                            placeholder=\"Search...\"\n                            onChange={this.handleChange}\n                            value={this.state.search} //displays user input\n                            />\n                        </div>\n                    </div>\n                   {\n                       //maps out data retrieved from database to the frontEnd.\n                       this.state.contacts.map(items=>items.map(item=>{\n                           if(item.username.indexOf(this.state.search)>-1){\n                            return(\n                                <div className=\"contact\">\n                                    <div className=\"chat-profile-container\">\n                                    <img className=\"chat-profile\" src={item.profileImage} \n                                        onClick={()=>this.drawerToggleClickHandler(item.uid)}/>\n                                    </div>\n                                    <div className=\"chat-content-container\" \n                                        onClick={()=>this.handleSession(item.uid)}>\n                                        <h4>{item.username}</h4>\n                                    </div>\n                                </div>\n                            )\n                           }\n                       }))\n                   }\n                </div>\n\n                <div className=\"chats-section\">\n                    <div className=\"chats-banner\">\n                        <h1>Chats</h1>\n                    </div>\n                    <div className=\"message-container\">\n                        \n                        {// maps out messages the current users' messages\n                        this.state.messages.map(item=> item.map(text=>{\n                            if(text.chatUid === (this.state.conversationkey )){\n                                if(text.uid === this.state.thisU){\n                                    return(\n                                        <div className=\"messageReceiver\" key={`${fire.auth().currentUser.uid}`}>\n                                            <div className=\"messageReceiverR\">\n                                                <p>\n                                                    {text.message}\n                                                    <h10\n                                                        style={{float:'right',\n                                                                paddingRight:'10px'    \n                                                                }}\n                                                    >\n                                                    <br/>\n                                                        {text.time}\n                                                    </h10>\n                                                                    \n                                                </p>\n                                            </div>\n                                        </div>\n                                    )\n                            }// maps out the other users' messages.\n                            }else if(text.chatUid === this.state.alternateConversationkey){\n                                    if(text.uid === this.state.key){\n                                        return(\n                                            <div className=\"messageSender\" key={this.state.key}>\n                                                <div className=\"messageReceiverS\">\n                                                    <p>\n                                                            {text.message}\n                                                        <h10\n                                                             style={{paddingLeft:'10px'}}\n                                                        ><br/>\n                                                            {text.time}\n                                                        </h10>\n                                                    </p>\n                                                </div>\n                                            </div>\n                                        )\n                                    }\n                            }\n                            }))}\n                    </div>\n                    <footer className=\"message-footer\">\n                        <h5>\n                            <input\n                                id=\"message\"\n                                className=\"message-input\"\n                                autoComplete= \"off\"\n                                type=\"text\"\n                                name=\"message\"\n                                placeholder=\"Type a message\"\n                                onChange={this.handleChange}\n                                value={this.state.message}\n\n                            /> \n                            <h3 \n                                className=\"message-btn\"\n                                onClick={()=>this.handleMessage()}\n                            ><FontAwesomeIcon \n                                icon={faArrowCircleRight} \n                                size=\"2x\" \n                                color=\"black\"                        \n                            />\n                            </h3>\n                        </h5>\n                    </footer>    \n                </div>\n            </div>\n        )\n    }\n}\nexport default ChatScreen;","import React,{useEffect} from 'react'\nimport {BrowserRouter as Router, Switch, Route} from 'react-router-dom';\nimport Login from './screens/Login';\nimport fire from './screens/fire';\nimport FormSignup from './screens/FormSignup';\nimport InvestorDetails from './screens/regPage';\nimport FeedScreen from './screens/FeedScreen';\nimport validate from './screens/validateInfo';\nimport useForm from './screens/useForm'\nimport Navigation from './screens/Navigation';\nimport About from './screens/About';\nimport ProfileScreen from './screens/profile';\nimport CreatePostScreen from './screens/createpost';\nimport Asker from './screens/helpPage';\nimport HomeScreen from './screens/Home';\nimport MyBusinessScreen from './screens/mybusiness';\nimport ResourceScreen from './screens/resources';\nimport ProjectScreen from './screens/projects';\nimport EditProfileScreen from './screens/editProfile';\nimport Contact from './screens/Contact';\nimport financeScreen from './screens/finances';\nimport OpportunitiesScreen from './screens/opportunities';\nimport InvestorProfileEditScreen from './screens/investorProfileEdit';\nimport ChatScreen from './screens/chat';\n\nfunction App() {\n  //calls functions from useForm\n  const {  values,setValues} = useForm(\n\n    validate\n  );\n\n\n// listens for changes\n  const authListener = ()=>{\n      fire.auth().onAuthStateChanged((currentuser)=>{\n        //console.log(currentuser);\n          if(currentuser){\n              setValues({user:currentuser});\n          }else{\n              setValues({user:null})\n          }\n      })\n  }\n\n  // listens for changes\n  useEffect(()=>{\n      authListener();\n  },[])\n\n  \n    return(\n      \n    <div className='main'>\n      \n      {// if theres a user value routes would be displayed\n      values.user ? (\n        <Router>\n          <Navigation/>\n          <Switch>\n            <Route path ='/'  exact component={HomeScreen}/>\n            <Route path = '/mybusiness' component = {MyBusinessScreen}/>\n            <Route path = '/resources' component ={ResourceScreen}/>\n            <Route path ='/entrepreneur' component={FormSignup}/>\n            <Route path='/about' component={About}/>\n            <Route path = '/investor' component={InvestorDetails}/>\n            <Route path = '/feed' component={FeedScreen} />\n            <Route path = '/profile' component={ProfileScreen} />\n            <Route path = '/help' component={Asker}/>\n            <Route path = '/createpost' component ={CreatePostScreen}/>\n            <Route path = '/projects' component = {ProjectScreen}/>\n            <Route path = '/editprofile' component={EditProfileScreen}/>\n            <Route path = '/support' component={Contact}/>\n            <Route path = '/finances' component={financeScreen} />\n            <Route path = '/opportunities' component = {OpportunitiesScreen}/>\n            <Route path = '/iprofileEdit' component ={InvestorProfileEditScreen}/>\n            <Route path = '/chat' component = {ChatScreen}/>\n          \n          </Switch>\n           \n        </Router>\n   \n      \n      ):(\n       \n        // sign in and sign up page displayed.\n        <Login/>\n    \n      )}\n    </div>\n\n    )\n  }\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}